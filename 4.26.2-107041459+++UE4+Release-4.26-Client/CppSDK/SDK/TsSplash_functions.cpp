#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsSplash

#include "Basic.hpp"

#include "TsSplash_classes.hpp"
#include "TsSplash_parameters.hpp"


namespace SDK
{

// Function TsSplash.TsSplash_C.Init
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsSplash_C::Init(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "Init");

	Params::TsSplash_C_Init Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsSplash.TsSplash_C.ShowSplashView
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsSplash_C::ShowSplashView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "ShowSplashView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsSplash.TsSplash_C.ChangeToPhaseShaderBlack
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsSplash_C::ChangeToPhaseShaderBlack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "ChangeToPhaseShaderBlack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsSplash.TsSplash_C.ChangeToPhaseThree
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsSplash_C::ChangeToPhaseThree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "ChangeToPhaseThree");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsSplash.TsSplash_C.ChangeToPhaseTwo
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsSplash_C::ChangeToPhaseTwo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "ChangeToPhaseTwo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsSplash.TsSplash_C.LoopEvent
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Gap                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FinishLoopState                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTsSplash_C::LoopEvent(float Gap, bool* FinishLoopState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "LoopEvent");

	Params::TsSplash_C_LoopEvent Parms{};

	Parms.Gap = Gap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FinishLoopState != nullptr)
		*FinishLoopState = Parms.FinishLoopState;
}


// Function TsSplash.TsSplash_C.ChangeScene
// (Native, Public, BlueprintCallable, BlueprintEvent)

void UTsSplash_C::ChangeScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "ChangeScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TsSplash.TsSplash_C.GetDelay
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UTsSplash_C::GetDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsSplash_C", "GetDelay");

	Params::TsSplash_C_GetDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

