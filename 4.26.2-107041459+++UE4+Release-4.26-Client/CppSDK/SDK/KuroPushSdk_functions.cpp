#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroPushSdk

#include "Basic.hpp"

#include "KuroPushSdk_classes.hpp"
#include "KuroPushSdk_parameters.hpp"


namespace SDK
{

// Function KuroPushSdk.KuroPushSdkStaticLibrary.AreNotificationEnable
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::AreNotificationEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "AreNotificationEnable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.BindAlias
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Alias                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Sn                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::BindAlias(const class FString& Alias, const class FString& Sn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "BindAlias");

	Params::KuroPushSdkStaticLibrary_BindAlias Parms{};

	Parms.Alias = std::move(Alias);
	Parms.Sn = std::move(Sn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.CheckManifest
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::CheckManifest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "CheckManifest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.ClearNotificationForNotificationBar
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::ClearNotificationForNotificationBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "ClearNotificationForNotificationBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.Destroy
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "Destroy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.GetClientId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UKuroPushSdkStaticLibrary::GetClientId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "GetClientId");

	Params::KuroPushSdkStaticLibrary_GetClientId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.GetPushObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UKuroPushObject*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UKuroPushObject* UKuroPushSdkStaticLibrary::GetPushObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "GetPushObject");

	Params::KuroPushSdkStaticLibrary_GetPushObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.GetStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UKuroPushSdkStaticLibrary::GetStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "GetStatus");

	Params::KuroPushSdkStaticLibrary_GetStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.GetVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UKuroPushSdkStaticLibrary::GetVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "GetVersion");

	Params::KuroPushSdkStaticLibrary_GetVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.Init
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.IsPushTurnOn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKuroPushSdkStaticLibrary::IsPushTurnOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "IsPushTurnOn");

	Params::KuroPushSdkStaticLibrary_IsPushTurnOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.OpenNotification
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::OpenNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "OpenNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.PushLocalNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           body                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ExData                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::PushLocalNotification(const class FString& Title, const class FString& body, const class FString& ExData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "PushLocalNotification");

	Params::KuroPushSdkStaticLibrary_PushLocalNotification Parms{};

	Parms.Title = std::move(Title);
	Parms.body = std::move(body);
	Parms.ExData = std::move(ExData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.RegistRemoteNotification
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::RegistRemoteNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "RegistRemoteNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.ResetBudge
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::ResetBudge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "ResetBudge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.Resume
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "Resume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SendFeedBackMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ActionId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TaskId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MsgId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SendFeedBackMessage(const class FString& ActionId, const class FString& TaskId, const class FString& MsgId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SendFeedBackMessage");

	Params::KuroPushSdkStaticLibrary_SendFeedBackMessage Parms{};

	Parms.ActionId = std::move(ActionId);
	Parms.TaskId = std::move(TaskId);
	Parms.MsgId = std::move(MsgId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetApplicationGroupIdentify
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Identify                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetApplicationGroupIdentify(const class FString& Identify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetApplicationGroupIdentify");

	Params::KuroPushSdkStaticLibrary_SetApplicationGroupIdentify Parms{};

	Parms.Identify = std::move(Identify);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetBudge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           budge                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetBudge(const class FString& budge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetBudge");

	Params::KuroPushSdkStaticLibrary_SetBudge Parms{};

	Parms.budge = std::move(budge);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ChannelId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetChannel(const class FString& ChannelId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetChannel");

	Params::KuroPushSdkStaticLibrary_SetChannel Parms{};

	Parms.ChannelId = std::move(ChannelId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetDebug
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::SetDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetLocalChannelId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ChannelId                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetLocalChannelId(class FString* ChannelId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetLocalChannelId");

	Params::KuroPushSdkStaticLibrary_SetLocalChannelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ChannelId != nullptr)
		*ChannelId = std::move(Parms.ChannelId);
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetLocalChannelIdAndName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ChannelId                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ChannelName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetLocalChannelIdAndName(class FString* ChannelId, class FString* ChannelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetLocalChannelIdAndName");

	Params::KuroPushSdkStaticLibrary_SetLocalChannelIdAndName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ChannelId != nullptr)
		*ChannelId = std::move(Parms.ChannelId);

	if (ChannelName != nullptr)
		*ChannelName = std::move(Parms.ChannelName);
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetLocalSetNotificationIcon
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           SmallIcon                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LargeIcon                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetLocalSetNotificationIcon(class FString* SmallIcon, class FString* LargeIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetLocalSetNotificationIcon");

	Params::KuroPushSdkStaticLibrary_SetLocalSetNotificationIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SmallIcon != nullptr)
		*SmallIcon = std::move(Parms.SmallIcon);

	if (LargeIcon != nullptr)
		*LargeIcon = std::move(Parms.LargeIcon);
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetLocationEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsVerify                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetLocationEnable(bool IsEnable, bool IsVerify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetLocationEnable");

	Params::KuroPushSdkStaticLibrary_SetLocationEnable Parms{};

	Parms.IsEnable = IsEnable;
	Parms.IsVerify = IsVerify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetNotificationIcon
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           SmallIcon                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LargeIcon                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetNotificationIcon(class FString* SmallIcon, class FString* LargeIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetNotificationIcon");

	Params::KuroPushSdkStaticLibrary_SetNotificationIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SmallIcon != nullptr)
		*SmallIcon = std::move(Parms.SmallIcon);

	if (LargeIcon != nullptr)
		*LargeIcon = std::move(Parms.LargeIcon);
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetPushMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    TurnOn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetPushMode(bool TurnOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetPushMode");

	Params::KuroPushSdkStaticLibrary_SetPushMode Parms{};

	Parms.TurnOn = TurnOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetRunInBackGround
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::SetRunInBackGround(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetRunInBackGround");

	Params::KuroPushSdkStaticLibrary_SetRunInBackGround Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.SetTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Tags                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Sn                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKuroPushSdkStaticLibrary::SetTag(const class FString& Tags, const class FString& Sn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "SetTag");

	Params::KuroPushSdkStaticLibrary_SetTag Parms{};

	Parms.Tags = std::move(Tags);
	Parms.Sn = std::move(Sn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.StartPushSdk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           AppId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AppKey                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AppSecret                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::StartPushSdk(const class FString& AppId, const class FString& AppKey, const class FString& AppSecret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "StartPushSdk");

	Params::KuroPushSdkStaticLibrary_StartPushSdk Parms{};

	Parms.AppId = std::move(AppId);
	Parms.AppKey = std::move(AppKey);
	Parms.AppSecret = std::move(AppSecret);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.TurnOffPush
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::TurnOffPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "TurnOffPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.TurnOnPush
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::TurnOnPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "TurnOnPush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.UnBindAlias
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Alias                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Sn                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSelf                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroPushSdkStaticLibrary::UnBindAlias(const class FString& Alias, const class FString& Sn, bool IsSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "UnBindAlias");

	Params::KuroPushSdkStaticLibrary_UnBindAlias Parms{};

	Parms.Alias = std::move(Alias);
	Parms.Sn = std::move(Sn);
	Parms.IsSelf = IsSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroPushSdk.KuroPushSdkStaticLibrary.VoipRegistration
// (Final, Native, Static, Public, BlueprintCallable)

void UKuroPushSdkStaticLibrary::VoipRegistration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KuroPushSdkStaticLibrary", "VoipRegistration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

