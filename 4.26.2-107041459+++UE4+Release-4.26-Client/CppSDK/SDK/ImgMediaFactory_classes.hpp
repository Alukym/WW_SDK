#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImgMediaFactory

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class ImgMediaFactory.ImgMediaSettings
// 0x0040 (0x0070 - 0x0030)
class UImgMediaSettings final : public UObject
{
public:
	struct FFrameRate                             DefaultFrameRate;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CacheBehindPercentage;                             // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CacheSizeGB;                                       // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CacheThreads;                                      // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CacheThreadStackSizeKB;                            // 0x0044(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlobalCacheSizeGB;                                 // 0x0048(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseGlobalCache;                                    // 0x004C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2165[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        ExrDecoderThreads;                                 // 0x0050(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2166[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultProxy;                                      // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          UseDefaultProxy;                                   // 0x0068(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2167[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ImgMediaSettings">();
	}
	static class UImgMediaSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UImgMediaSettings>();
	}
};
static_assert(alignof(UImgMediaSettings) == 0x000008, "Wrong alignment on UImgMediaSettings");
static_assert(sizeof(UImgMediaSettings) == 0x000070, "Wrong size on UImgMediaSettings");
static_assert(offsetof(UImgMediaSettings, DefaultFrameRate) == 0x000030, "Member 'UImgMediaSettings::DefaultFrameRate' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, CacheBehindPercentage) == 0x000038, "Member 'UImgMediaSettings::CacheBehindPercentage' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, CacheSizeGB) == 0x00003C, "Member 'UImgMediaSettings::CacheSizeGB' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, CacheThreads) == 0x000040, "Member 'UImgMediaSettings::CacheThreads' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, CacheThreadStackSizeKB) == 0x000044, "Member 'UImgMediaSettings::CacheThreadStackSizeKB' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, GlobalCacheSizeGB) == 0x000048, "Member 'UImgMediaSettings::GlobalCacheSizeGB' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, UseGlobalCache) == 0x00004C, "Member 'UImgMediaSettings::UseGlobalCache' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, ExrDecoderThreads) == 0x000050, "Member 'UImgMediaSettings::ExrDecoderThreads' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, DefaultProxy) == 0x000058, "Member 'UImgMediaSettings::DefaultProxy' has a wrong offset!");
static_assert(offsetof(UImgMediaSettings, UseDefaultProxy) == 0x000068, "Member 'UImgMediaSettings::UseDefaultProxy' has a wrong offset!");

}

