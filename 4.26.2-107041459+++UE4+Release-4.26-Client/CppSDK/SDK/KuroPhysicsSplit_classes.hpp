#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroPhysicsSplit

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class KuroPhysicsSplit.KuroPhysicsSplitSystem
// 0x0078 (0x00B0 - 0x0038)
class UKuroPhysicsSplitSystem final : public UKuroPhysicsSplitSystemBase
{
public:
	uint8                                         Pad_1AF7[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UActorComponent*>                  NoPhysicsCompSet;                                  // 0x0040(0x0050)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UActorComponent*>                ToTickCompList;                                    // 0x0090(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1AF8[0x10];                                    // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool IsTickFinishBP(class UWorld* World);
	static void StartTickPhysicsStateBP(class UWorld* World, const bool bUseProcessNumPerFrame, const int32 ProcessNumPerFrame);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroPhysicsSplitSystem">();
	}
	static class UKuroPhysicsSplitSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroPhysicsSplitSystem>();
	}
};
static_assert(alignof(UKuroPhysicsSplitSystem) == 0x000008, "Wrong alignment on UKuroPhysicsSplitSystem");
static_assert(sizeof(UKuroPhysicsSplitSystem) == 0x0000B0, "Wrong size on UKuroPhysicsSplitSystem");
static_assert(offsetof(UKuroPhysicsSplitSystem, NoPhysicsCompSet) == 0x000040, "Member 'UKuroPhysicsSplitSystem::NoPhysicsCompSet' has a wrong offset!");
static_assert(offsetof(UKuroPhysicsSplitSystem, ToTickCompList) == 0x000090, "Member 'UKuroPhysicsSplitSystem::ToTickCompList' has a wrong offset!");

}

