#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrashSight

#include "Basic.hpp"


namespace SDK::Params
{

// Function CrashSight.CrashSightProxy.SetBranchInfo
// 0x0020 (0x0020 - 0x0000)
struct CrashSightProxy_SetBranchInfo final
{
public:
	class FString                                 Stream;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Changelist;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashSightProxy_SetBranchInfo) == 0x000008, "Wrong alignment on CrashSightProxy_SetBranchInfo");
static_assert(sizeof(CrashSightProxy_SetBranchInfo) == 0x000020, "Wrong size on CrashSightProxy_SetBranchInfo");
static_assert(offsetof(CrashSightProxy_SetBranchInfo, Stream) == 0x000000, "Member 'CrashSightProxy_SetBranchInfo::Stream' has a wrong offset!");
static_assert(offsetof(CrashSightProxy_SetBranchInfo, Changelist) == 0x000010, "Member 'CrashSightProxy_SetBranchInfo::Changelist' has a wrong offset!");

// Function CrashSight.CrashSightProxy.SetCustomData
// 0x0020 (0x0020 - 0x0000)
struct CrashSightProxy_SetCustomData final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashSightProxy_SetCustomData) == 0x000008, "Wrong alignment on CrashSightProxy_SetCustomData");
static_assert(sizeof(CrashSightProxy_SetCustomData) == 0x000020, "Wrong size on CrashSightProxy_SetCustomData");
static_assert(offsetof(CrashSightProxy_SetCustomData, Key) == 0x000000, "Member 'CrashSightProxy_SetCustomData::Key' has a wrong offset!");
static_assert(offsetof(CrashSightProxy_SetCustomData, Value) == 0x000010, "Member 'CrashSightProxy_SetCustomData::Value' has a wrong offset!");

// Function CrashSight.CrashSightProxy.SetCustomDataByFName
// 0x0020 (0x0020 - 0x0000)
struct CrashSightProxy_SetCustomDataByFName final
{
public:
	class FName                                   Key;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BFD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashSightProxy_SetCustomDataByFName) == 0x000008, "Wrong alignment on CrashSightProxy_SetCustomDataByFName");
static_assert(sizeof(CrashSightProxy_SetCustomDataByFName) == 0x000020, "Wrong size on CrashSightProxy_SetCustomDataByFName");
static_assert(offsetof(CrashSightProxy_SetCustomDataByFName, Key) == 0x000000, "Member 'CrashSightProxy_SetCustomDataByFName::Key' has a wrong offset!");
static_assert(offsetof(CrashSightProxy_SetCustomDataByFName, Value) == 0x000010, "Member 'CrashSightProxy_SetCustomDataByFName::Value' has a wrong offset!");

// Function CrashSight.CrashSightProxy.SetUserId
// 0x0010 (0x0010 - 0x0000)
struct CrashSightProxy_SetUserId final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashSightProxy_SetUserId) == 0x000008, "Wrong alignment on CrashSightProxy_SetUserId");
static_assert(sizeof(CrashSightProxy_SetUserId) == 0x000010, "Wrong size on CrashSightProxy_SetUserId");
static_assert(offsetof(CrashSightProxy_SetUserId, UserId) == 0x000000, "Member 'CrashSightProxy_SetUserId::UserId' has a wrong offset!");

}

