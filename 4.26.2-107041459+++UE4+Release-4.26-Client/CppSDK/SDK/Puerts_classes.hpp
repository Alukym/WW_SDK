#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Puerts

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class Puerts.PuertsBlueprintLibrary
// 0x0000 (0x0030 - 0x0030)
class UPuertsBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ClearJSCache();
	static void ExecuteModuleInSharedJsEnv(class FName ModuleName);
	static void PreloadJS(class UKuroPreloadJSCallback* Callback);
	static void StartShareJsEnv(class FName ModuleName, class UGameInstance* GameInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PuertsBlueprintLibrary">();
	}
	static class UPuertsBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPuertsBlueprintLibrary>();
	}
};
static_assert(alignof(UPuertsBlueprintLibrary) == 0x000008, "Wrong alignment on UPuertsBlueprintLibrary");
static_assert(sizeof(UPuertsBlueprintLibrary) == 0x000030, "Wrong size on UPuertsBlueprintLibrary");

// Class Puerts.PuertsSetting
// 0x0068 (0x0098 - 0x0030)
class UPuertsSetting final : public UObject
{
public:
	class FString                                 RootPath;                                          // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoModeEnable;                                    // 0x0040(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DebugEnable;                                       // 0x0041(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0D[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DebugPort;                                         // 0x0044(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WaitDebugger;                                      // 0x0048(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0E[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WaitDebuggerTimeout;                               // 0x0050(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfJsEnv;                                     // 0x0058(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WatchDisable;                                      // 0x005C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0F[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         IgnoreClassListOnDTS;                              // 0x0060(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         IgnoreStructListOnDTS;                             // 0x0070(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                 PreloadPath;                                       // 0x0080(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableStackTrace;                                  // 0x0090(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B10[0x7];                                     // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PuertsSetting">();
	}
	static class UPuertsSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPuertsSetting>();
	}
};
static_assert(alignof(UPuertsSetting) == 0x000008, "Wrong alignment on UPuertsSetting");
static_assert(sizeof(UPuertsSetting) == 0x000098, "Wrong size on UPuertsSetting");
static_assert(offsetof(UPuertsSetting, RootPath) == 0x000030, "Member 'UPuertsSetting::RootPath' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, AutoModeEnable) == 0x000040, "Member 'UPuertsSetting::AutoModeEnable' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, DebugEnable) == 0x000041, "Member 'UPuertsSetting::DebugEnable' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, DebugPort) == 0x000044, "Member 'UPuertsSetting::DebugPort' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, WaitDebugger) == 0x000048, "Member 'UPuertsSetting::WaitDebugger' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, WaitDebuggerTimeout) == 0x000050, "Member 'UPuertsSetting::WaitDebuggerTimeout' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, NumberOfJsEnv) == 0x000058, "Member 'UPuertsSetting::NumberOfJsEnv' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, WatchDisable) == 0x00005C, "Member 'UPuertsSetting::WatchDisable' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, IgnoreClassListOnDTS) == 0x000060, "Member 'UPuertsSetting::IgnoreClassListOnDTS' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, IgnoreStructListOnDTS) == 0x000070, "Member 'UPuertsSetting::IgnoreStructListOnDTS' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, PreloadPath) == 0x000080, "Member 'UPuertsSetting::PreloadPath' has a wrong offset!");
static_assert(offsetof(UPuertsSetting, EnableStackTrace) == 0x000090, "Member 'UPuertsSetting::EnableStackTrace' has a wrong offset!");

}

