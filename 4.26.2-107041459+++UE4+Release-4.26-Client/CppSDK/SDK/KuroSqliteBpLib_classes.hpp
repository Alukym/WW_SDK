#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroSqliteBpLib

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class KuroSqliteBpLib.KuroPrepareStatementLib
// 0x0000 (0x0030 - 0x0030)
class UKuroPrepareStatementLib final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroPrepareStatementLib">();
	}
	static class UKuroPrepareStatementLib* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroPrepareStatementLib>();
	}
};
static_assert(alignof(UKuroPrepareStatementLib) == 0x000008, "Wrong alignment on UKuroPrepareStatementLib");
static_assert(sizeof(UKuroPrepareStatementLib) == 0x000030, "Wrong size on UKuroPrepareStatementLib");

// Class KuroSqliteBpLib.KuroQueryStatLibrary
// 0x0000 (0x0030 - 0x0030)
class UKuroQueryStatLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AppendString(const class FString& Content);
	static void CloseTestDataFile();
	static void InvokeCloseSaveQueryArgsFileAction();
	static void InvokeTestSqliteAction();
	static void SetCloseSaveQueryArgsFileAction(const struct FJsObject& Action);
	static void SetTestDataSavePath(const class FString& Path);
	static void SetTestSqliteAction(const struct FJsObject& Action);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroQueryStatLibrary">();
	}
	static class UKuroQueryStatLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroQueryStatLibrary>();
	}
};
static_assert(alignof(UKuroQueryStatLibrary) == 0x000008, "Wrong alignment on UKuroQueryStatLibrary");
static_assert(sizeof(UKuroQueryStatLibrary) == 0x000030, "Wrong size on UKuroQueryStatLibrary");

// Class KuroSqliteBpLib.KuroSqliteLibrary
// 0x0000 (0x0030 - 0x0030)
class UKuroSqliteLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CloseAllConnections();
	static bool Execute(const class FString& DbPath, const class FString& Sql);
	static void ExecuteAsync(const class FString& DbPath, const class FString& Sql);
	static bool OpenCreateDB(const class FString& DbPath, const bool bUseThread);
	static bool Query(const class FString& DbPath, const class FString& Sql, class UKuroSqliteResultSet* ResultSet);
	static void QueryAsync(const class FString& DbPath, const class FString& Sql, class UKuroSqliteResultSet* ResultSet);
	static int32 QueryValue(const class FString& DbPath, const class FString& Sql, class FString* OutValue);
	static void SetDBKey(const class FString& DBKey);
	static int32 SqliteStatusGetCurrent(const int32 StatusOp);
	static int32 SqliteStatusGetHighWater(const int32 StatusOp, const bool ResetHighWater);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroSqliteLibrary">();
	}
	static class UKuroSqliteLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroSqliteLibrary>();
	}
};
static_assert(alignof(UKuroSqliteLibrary) == 0x000008, "Wrong alignment on UKuroSqliteLibrary");
static_assert(sizeof(UKuroSqliteLibrary) == 0x000030, "Wrong size on UKuroSqliteLibrary");

// Class KuroSqliteBpLib.KuroSqliteResultSet
// 0x0038 (0x0068 - 0x0030)
class UKuroSqliteResultSet final : public UObject
{
public:
	TDelegate<void(bool Success)>                 QueriedCallback;                                   // 0x0030(0x0014)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1817[0x24];                                    // 0x0044(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Release();

	bool GetBigInt(const class FString& Column, int64* Value) const;
	bool GetBool(const class FString& Column, bool* Value) const;
	bool GetBytes(const class FString& Column, struct FArrayBuffer* Value) const;
	bool GetFloat(const class FString& Column, float* Value) const;
	bool GetInt(const class FString& Column, int32* Value) const;
	bool GetString(const class FString& Column, class FString* Value) const;
	bool HasValue() const;
	bool MoveToNext() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroSqliteResultSet">();
	}
	static class UKuroSqliteResultSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroSqliteResultSet>();
	}
};
static_assert(alignof(UKuroSqliteResultSet) == 0x000008, "Wrong alignment on UKuroSqliteResultSet");
static_assert(sizeof(UKuroSqliteResultSet) == 0x000068, "Wrong size on UKuroSqliteResultSet");
static_assert(offsetof(UKuroSqliteResultSet, QueriedCallback) == 0x000030, "Member 'UKuroSqliteResultSet::QueriedCallback' has a wrong offset!");

}

