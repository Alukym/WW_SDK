#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TpSafe

#include "Basic.hpp"

#include "JsEnv_structs.hpp"


namespace SDK::Params
{

// Function TpSafe.TpSafeProxy.GetAntiData
// 0x0010 (0x0010 - 0x0000)
struct TpSafeProxy_GetAntiData final
{
public:
	struct FArrayBuffer                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(TpSafeProxy_GetAntiData) == 0x000008, "Wrong alignment on TpSafeProxy_GetAntiData");
static_assert(sizeof(TpSafeProxy_GetAntiData) == 0x000010, "Wrong size on TpSafeProxy_GetAntiData");
static_assert(offsetof(TpSafeProxy_GetAntiData, ReturnValue) == 0x000000, "Member 'TpSafeProxy_GetAntiData::ReturnValue' has a wrong offset!");

// Function TpSafe.TpSafeProxy.RecvAntiData
// 0x0010 (0x0010 - 0x0000)
struct TpSafeProxy_RecvAntiData final
{
public:
	struct FArrayBuffer                           Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(TpSafeProxy_RecvAntiData) == 0x000008, "Wrong alignment on TpSafeProxy_RecvAntiData");
static_assert(sizeof(TpSafeProxy_RecvAntiData) == 0x000010, "Wrong size on TpSafeProxy_RecvAntiData");
static_assert(offsetof(TpSafeProxy_RecvAntiData, Data) == 0x000000, "Member 'TpSafeProxy_RecvAntiData::Data' has a wrong offset!");

// Function TpSafe.TpSafeProxy.SetUserInfo
// 0x0020 (0x0020 - 0x0000)
struct TpSafeProxy_SetUserInfo final
{
public:
	int32                                         AccountType;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WorldId;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OpenId;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerId;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22E7[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TpSafeProxy_SetUserInfo) == 0x000008, "Wrong alignment on TpSafeProxy_SetUserInfo");
static_assert(sizeof(TpSafeProxy_SetUserInfo) == 0x000020, "Wrong size on TpSafeProxy_SetUserInfo");
static_assert(offsetof(TpSafeProxy_SetUserInfo, AccountType) == 0x000000, "Member 'TpSafeProxy_SetUserInfo::AccountType' has a wrong offset!");
static_assert(offsetof(TpSafeProxy_SetUserInfo, WorldId) == 0x000004, "Member 'TpSafeProxy_SetUserInfo::WorldId' has a wrong offset!");
static_assert(offsetof(TpSafeProxy_SetUserInfo, OpenId) == 0x000008, "Member 'TpSafeProxy_SetUserInfo::OpenId' has a wrong offset!");
static_assert(offsetof(TpSafeProxy_SetUserInfo, PlayerId) == 0x000018, "Member 'TpSafeProxy_SetUserInfo::PlayerId' has a wrong offset!");

}

