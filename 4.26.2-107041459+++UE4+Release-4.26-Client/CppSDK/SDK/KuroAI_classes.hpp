#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroAI

#include "Basic.hpp"

#include "AIModule_classes.hpp"


namespace SDK
{

// Class KuroAI.BTComposite_ParallelNode
// 0x0008 (0x00A0 - 0x0098)
class UBTComposite_ParallelNode final : public UBTCompositeNode
{
public:
	bool                                          Test;                                              // 0x0098(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1757[0x7];                                     // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTComposite_ParallelNode">();
	}
	static class UBTComposite_ParallelNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTComposite_ParallelNode>();
	}
};
static_assert(alignof(UBTComposite_ParallelNode) == 0x000008, "Wrong alignment on UBTComposite_ParallelNode");
static_assert(sizeof(UBTComposite_ParallelNode) == 0x0000A0, "Wrong size on UBTComposite_ParallelNode");
static_assert(offsetof(UBTComposite_ParallelNode, Test) == 0x000098, "Member 'UBTComposite_ParallelNode::Test' has a wrong offset!");

// Class KuroAI.BTComposite_Random
// 0x0010 (0x00A8 - 0x0098)
class UBTComposite_Random final : public UBTCompositeNode
{
public:
	TArray<int32>                                 Weights;                                           // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTComposite_Random">();
	}
	static class UBTComposite_Random* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTComposite_Random>();
	}
};
static_assert(alignof(UBTComposite_Random) == 0x000008, "Wrong alignment on UBTComposite_Random");
static_assert(sizeof(UBTComposite_Random) == 0x0000A8, "Wrong size on UBTComposite_Random");
static_assert(offsetof(UBTComposite_Random, Weights) == 0x000098, "Member 'UBTComposite_Random::Weights' has a wrong offset!");

}

