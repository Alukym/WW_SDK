#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TapLogin

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "TapCommon_structs.hpp"


namespace SDK
{

// ScriptStruct TapLogin.TULoginError
// 0x0038 (0x0038 - 0x0000)
struct FTULoginError final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2295[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Msg;                                               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error_description;                                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTULoginError) == 0x000008, "Wrong alignment on FTULoginError");
static_assert(sizeof(FTULoginError) == 0x000038, "Wrong size on FTULoginError");
static_assert(offsetof(FTULoginError, Code) == 0x000000, "Member 'FTULoginError::Code' has a wrong offset!");
static_assert(offsetof(FTULoginError, Msg) == 0x000008, "Member 'FTULoginError::Msg' has a wrong offset!");
static_assert(offsetof(FTULoginError, Error) == 0x000018, "Member 'FTULoginError::Error' has a wrong offset!");
static_assert(offsetof(FTULoginError, Error_description) == 0x000028, "Member 'FTULoginError::Error_description' has a wrong offset!");

// ScriptStruct TapLogin.LoginWrapper
// 0x0018 (0x0018 - 0x0000)
struct FLoginWrapper final
{
public:
	class FString                                 Wrapper;                                           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        LoginCallbackCode;                                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoginWrapper) == 0x000008, "Wrong alignment on FLoginWrapper");
static_assert(sizeof(FLoginWrapper) == 0x000018, "Wrong size on FLoginWrapper");
static_assert(offsetof(FLoginWrapper, Wrapper) == 0x000000, "Member 'FLoginWrapper::Wrapper' has a wrong offset!");
static_assert(offsetof(FLoginWrapper, LoginCallbackCode) == 0x000010, "Member 'FLoginWrapper::LoginCallbackCode' has a wrong offset!");

// ScriptStruct TapLogin.FriendWrapper
// 0x0020 (0x0020 - 0x0000)
struct FFriendWrapper final
{
public:
	class FString                                 Content;                                           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2296[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Code;                                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFriendWrapper) == 0x000008, "Wrong alignment on FFriendWrapper");
static_assert(sizeof(FFriendWrapper) == 0x000020, "Wrong size on FFriendWrapper");
static_assert(offsetof(FFriendWrapper, Content) == 0x000000, "Member 'FFriendWrapper::Content' has a wrong offset!");
static_assert(offsetof(FFriendWrapper, Success) == 0x000010, "Member 'FFriendWrapper::Success' has a wrong offset!");
static_assert(offsetof(FFriendWrapper, Code) == 0x000018, "Member 'FFriendWrapper::Code' has a wrong offset!");

// ScriptStruct TapLogin.PermissionCheckBoxStyle
// 0x0868 (0x0870 - 0x0008)
struct FPermissionCheckBoxStyle final : public FSlateWidgetStyle
{
public:
	struct FCheckBoxStyle                         PermissionCheckBoxStyle;                           // 0x0008(0x05E0)(Edit, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        PermissionTextBlockStyle;                          // 0x05E8(0x0288)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPermissionCheckBoxStyle) == 0x000008, "Wrong alignment on FPermissionCheckBoxStyle");
static_assert(sizeof(FPermissionCheckBoxStyle) == 0x000870, "Wrong size on FPermissionCheckBoxStyle");
static_assert(offsetof(FPermissionCheckBoxStyle, PermissionCheckBoxStyle) == 0x000008, "Member 'FPermissionCheckBoxStyle::PermissionCheckBoxStyle' has a wrong offset!");
static_assert(offsetof(FPermissionCheckBoxStyle, PermissionTextBlockStyle) == 0x0005E8, "Member 'FPermissionCheckBoxStyle::PermissionTextBlockStyle' has a wrong offset!");

// ScriptStruct TapLogin.QrCodeScanTipButtonStyle
// 0x0438 (0x0440 - 0x0008)
struct FQrCodeScanTipButtonStyle final : public FSlateWidgetStyle
{
public:
	struct FTextBlockStyle                        ScanTipTextBlockStyle;                             // 0x0008(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            IconBrush;                                         // 0x0290(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            OpenBrush;                                         // 0x0320(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CloseBrush;                                        // 0x03B0(0x0090)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQrCodeScanTipButtonStyle) == 0x000008, "Wrong alignment on FQrCodeScanTipButtonStyle");
static_assert(sizeof(FQrCodeScanTipButtonStyle) == 0x000440, "Wrong size on FQrCodeScanTipButtonStyle");
static_assert(offsetof(FQrCodeScanTipButtonStyle, ScanTipTextBlockStyle) == 0x000008, "Member 'FQrCodeScanTipButtonStyle::ScanTipTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FQrCodeScanTipButtonStyle, IconBrush) == 0x000290, "Member 'FQrCodeScanTipButtonStyle::IconBrush' has a wrong offset!");
static_assert(offsetof(FQrCodeScanTipButtonStyle, OpenBrush) == 0x000320, "Member 'FQrCodeScanTipButtonStyle::OpenBrush' has a wrong offset!");
static_assert(offsetof(FQrCodeScanTipButtonStyle, CloseBrush) == 0x0003B0, "Member 'FQrCodeScanTipButtonStyle::CloseBrush' has a wrong offset!");

// ScriptStruct TapLogin.TapLoginStyle
// 0x2958 (0x2960 - 0x0008)
struct FTapLoginStyle final : public FSlateWidgetStyle
{
public:
	struct FTextBlockStyle                        TitleTextBlockStyle;                               // 0x0008(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                TitlePadding;                                      // 0x0290(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        SubtitleTextBlockStyle;                            // 0x02A0(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                QrCodePadding;                                     // 0x0528(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                QrCodeDescription2Padding;                         // 0x0538(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        QrCodeDescriptionStyle;                            // 0x0548(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        QrCodeDescriptionStyle2;                           // 0x07D0(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            TipContainerBrush;                                 // 0x0A58(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FQrCodeScanTipButtonStyle              QrCodeScanTipButtonStyle;                          // 0x0AE8(0x0440)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            RetryBrush;                                        // 0x0F28(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                RetryContentPadding;                               // 0x0FB8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                            QrCodeRetryIconBrush;                              // 0x0FC8(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        QrCodeRetryTextBlockStyle;                         // 0x1058(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        QrCodeRetryDescriptionStyle;                       // 0x12E0(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                NoPermissionPadding;                               // 0x1568(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                            NoPermissionBrush;                                 // 0x1578(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                WebAuthButtonPadding;                              // 0x1608(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        WebAuthTextBlockStyle;                             // 0x1618(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            WebAuthArrow;                                      // 0x18A0(0x0090)(Edit, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          WebAuthHAlignment;                                 // 0x1930(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2297[0x7];                                     // 0x1931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBlockStyle                        WebAuthTipTextBlockStyle;                          // 0x1938(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        WebAuthTipTextBlockStyle2;                         // 0x1BC0(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                WebAuthTip2Padding;                                // 0x1E48(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                PermissionItemPadding;                             // 0x1E58(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        PermissionTitleTextBlockStyle;                     // 0x1E68(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FPermissionCheckBoxStyle               PermissionCheckBoxStyle;                           // 0x20F0(0x0870)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTapLoginStyle) == 0x000008, "Wrong alignment on FTapLoginStyle");
static_assert(sizeof(FTapLoginStyle) == 0x002960, "Wrong size on FTapLoginStyle");
static_assert(offsetof(FTapLoginStyle, TitleTextBlockStyle) == 0x000008, "Member 'FTapLoginStyle::TitleTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, TitlePadding) == 0x000290, "Member 'FTapLoginStyle::TitlePadding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, SubtitleTextBlockStyle) == 0x0002A0, "Member 'FTapLoginStyle::SubtitleTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodePadding) == 0x000528, "Member 'FTapLoginStyle::QrCodePadding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodeDescription2Padding) == 0x000538, "Member 'FTapLoginStyle::QrCodeDescription2Padding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodeDescriptionStyle) == 0x000548, "Member 'FTapLoginStyle::QrCodeDescriptionStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodeDescriptionStyle2) == 0x0007D0, "Member 'FTapLoginStyle::QrCodeDescriptionStyle2' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, TipContainerBrush) == 0x000A58, "Member 'FTapLoginStyle::TipContainerBrush' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodeScanTipButtonStyle) == 0x000AE8, "Member 'FTapLoginStyle::QrCodeScanTipButtonStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, RetryBrush) == 0x000F28, "Member 'FTapLoginStyle::RetryBrush' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, RetryContentPadding) == 0x000FB8, "Member 'FTapLoginStyle::RetryContentPadding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodeRetryIconBrush) == 0x000FC8, "Member 'FTapLoginStyle::QrCodeRetryIconBrush' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodeRetryTextBlockStyle) == 0x001058, "Member 'FTapLoginStyle::QrCodeRetryTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, QrCodeRetryDescriptionStyle) == 0x0012E0, "Member 'FTapLoginStyle::QrCodeRetryDescriptionStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, NoPermissionPadding) == 0x001568, "Member 'FTapLoginStyle::NoPermissionPadding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, NoPermissionBrush) == 0x001578, "Member 'FTapLoginStyle::NoPermissionBrush' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, WebAuthButtonPadding) == 0x001608, "Member 'FTapLoginStyle::WebAuthButtonPadding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, WebAuthTextBlockStyle) == 0x001618, "Member 'FTapLoginStyle::WebAuthTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, WebAuthArrow) == 0x0018A0, "Member 'FTapLoginStyle::WebAuthArrow' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, WebAuthHAlignment) == 0x001930, "Member 'FTapLoginStyle::WebAuthHAlignment' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, WebAuthTipTextBlockStyle) == 0x001938, "Member 'FTapLoginStyle::WebAuthTipTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, WebAuthTipTextBlockStyle2) == 0x001BC0, "Member 'FTapLoginStyle::WebAuthTipTextBlockStyle2' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, WebAuthTip2Padding) == 0x001E48, "Member 'FTapLoginStyle::WebAuthTip2Padding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, PermissionItemPadding) == 0x001E58, "Member 'FTapLoginStyle::PermissionItemPadding' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, PermissionTitleTextBlockStyle) == 0x001E68, "Member 'FTapLoginStyle::PermissionTitleTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FTapLoginStyle, PermissionCheckBoxStyle) == 0x0020F0, "Member 'FTapLoginStyle::PermissionCheckBoxStyle' has a wrong offset!");

// ScriptStruct TapLogin.TUAccessToken
// 0x0060 (0x0060 - 0x0000)
struct FTUAccessToken final
{
public:
	class FString                                 Kid;                                               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Access_token;                                      // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token_type;                                        // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Mac_key;                                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Mac_algorithm;                                     // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Scope;                                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTUAccessToken) == 0x000008, "Wrong alignment on FTUAccessToken");
static_assert(sizeof(FTUAccessToken) == 0x000060, "Wrong size on FTUAccessToken");
static_assert(offsetof(FTUAccessToken, Kid) == 0x000000, "Member 'FTUAccessToken::Kid' has a wrong offset!");
static_assert(offsetof(FTUAccessToken, Access_token) == 0x000010, "Member 'FTUAccessToken::Access_token' has a wrong offset!");
static_assert(offsetof(FTUAccessToken, Token_type) == 0x000020, "Member 'FTUAccessToken::Token_type' has a wrong offset!");
static_assert(offsetof(FTUAccessToken, Mac_key) == 0x000030, "Member 'FTUAccessToken::Mac_key' has a wrong offset!");
static_assert(offsetof(FTUAccessToken, Mac_algorithm) == 0x000040, "Member 'FTUAccessToken::Mac_algorithm' has a wrong offset!");
static_assert(offsetof(FTUAccessToken, Scope) == 0x000050, "Member 'FTUAccessToken::Scope' has a wrong offset!");

// ScriptStruct TapLogin.TUAntiAddictionModel
// 0x0010 (0x0010 - 0x0000)
struct FTUAntiAddictionModel final
{
public:
	class FString                                 Code;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTUAntiAddictionModel) == 0x000008, "Wrong alignment on FTUAntiAddictionModel");
static_assert(sizeof(FTUAntiAddictionModel) == 0x000010, "Wrong size on FTUAntiAddictionModel");
static_assert(offsetof(FTUAntiAddictionModel, Code) == 0x000000, "Member 'FTUAntiAddictionModel::Code' has a wrong offset!");

// ScriptStruct TapLogin.TULoginFriendInfo
// 0x0030 (0x0030 - 0x0000)
struct FTULoginFriendInfo final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Avatar;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Openid;                                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTULoginFriendInfo) == 0x000008, "Wrong alignment on FTULoginFriendInfo");
static_assert(sizeof(FTULoginFriendInfo) == 0x000030, "Wrong size on FTULoginFriendInfo");
static_assert(offsetof(FTULoginFriendInfo, Name) == 0x000000, "Member 'FTULoginFriendInfo::Name' has a wrong offset!");
static_assert(offsetof(FTULoginFriendInfo, Avatar) == 0x000010, "Member 'FTULoginFriendInfo::Avatar' has a wrong offset!");
static_assert(offsetof(FTULoginFriendInfo, Openid) == 0x000020, "Member 'FTULoginFriendInfo::Openid' has a wrong offset!");

// ScriptStruct TapLogin.TULoginFriendResult
// 0x0020 (0x0020 - 0x0000)
struct FTULoginFriendResult final
{
public:
	TArray<struct FTULoginFriendInfo>             Data;                                              // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 Cursor;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTULoginFriendResult) == 0x000008, "Wrong alignment on FTULoginFriendResult");
static_assert(sizeof(FTULoginFriendResult) == 0x000020, "Wrong size on FTULoginFriendResult");
static_assert(offsetof(FTULoginFriendResult, Data) == 0x000000, "Member 'FTULoginFriendResult::Data' has a wrong offset!");
static_assert(offsetof(FTULoginFriendResult, Cursor) == 0x000010, "Member 'FTULoginFriendResult::Cursor' has a wrong offset!");

// ScriptStruct TapLogin.TULoginProfileModel
// 0x0040 (0x0040 - 0x0000)
struct FTULoginProfileModel final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Avatar;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Openid;                                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Unionid;                                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTULoginProfileModel) == 0x000008, "Wrong alignment on FTULoginProfileModel");
static_assert(sizeof(FTULoginProfileModel) == 0x000040, "Wrong size on FTULoginProfileModel");
static_assert(offsetof(FTULoginProfileModel, Name) == 0x000000, "Member 'FTULoginProfileModel::Name' has a wrong offset!");
static_assert(offsetof(FTULoginProfileModel, Avatar) == 0x000010, "Member 'FTULoginProfileModel::Avatar' has a wrong offset!");
static_assert(offsetof(FTULoginProfileModel, Openid) == 0x000020, "Member 'FTULoginProfileModel::Openid' has a wrong offset!");
static_assert(offsetof(FTULoginProfileModel, Unionid) == 0x000030, "Member 'FTULoginProfileModel::Unionid' has a wrong offset!");

// ScriptStruct TapLogin.TULoginStorage
// 0x0001 (0x0001 - 0x0000)
struct FTULoginStorage final
{
public:
	uint8                                         Pad_2298[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTULoginStorage) == 0x000001, "Wrong alignment on FTULoginStorage");
static_assert(sizeof(FTULoginStorage) == 0x000001, "Wrong size on FTULoginStorage");

// ScriptStruct TapLogin.TULoginConfig
// 0x0018 (0x0018 - 0x0000)
struct FTULoginConfig final
{
public:
	class FString                                 ClientID;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERegionType                                   RegionType;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRoundCorner;                                      // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2299[0x6];                                     // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTULoginConfig) == 0x000008, "Wrong alignment on FTULoginConfig");
static_assert(sizeof(FTULoginConfig) == 0x000018, "Wrong size on FTULoginConfig");
static_assert(offsetof(FTULoginConfig, ClientID) == 0x000000, "Member 'FTULoginConfig::ClientID' has a wrong offset!");
static_assert(offsetof(FTULoginConfig, RegionType) == 0x000010, "Member 'FTULoginConfig::RegionType' has a wrong offset!");
static_assert(offsetof(FTULoginConfig, bRoundCorner) == 0x000011, "Member 'FTULoginConfig::bRoundCorner' has a wrong offset!");

// ScriptStruct TapLogin.TUQrCodeModel
// 0x0050 (0x0050 - 0x0000)
struct FTUQrCodeModel final
{
public:
	class FString                                 Qrcode_url;                                        // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Verification_url;                                  // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Device_code;                                       // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 User_code;                                         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Expires_in;                                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Interval;                                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTUQrCodeModel) == 0x000008, "Wrong alignment on FTUQrCodeModel");
static_assert(sizeof(FTUQrCodeModel) == 0x000050, "Wrong size on FTUQrCodeModel");
static_assert(offsetof(FTUQrCodeModel, Qrcode_url) == 0x000000, "Member 'FTUQrCodeModel::Qrcode_url' has a wrong offset!");
static_assert(offsetof(FTUQrCodeModel, Verification_url) == 0x000010, "Member 'FTUQrCodeModel::Verification_url' has a wrong offset!");
static_assert(offsetof(FTUQrCodeModel, Device_code) == 0x000020, "Member 'FTUQrCodeModel::Device_code' has a wrong offset!");
static_assert(offsetof(FTUQrCodeModel, User_code) == 0x000030, "Member 'FTUQrCodeModel::User_code' has a wrong offset!");
static_assert(offsetof(FTUQrCodeModel, Expires_in) == 0x000040, "Member 'FTUQrCodeModel::Expires_in' has a wrong offset!");
static_assert(offsetof(FTUQrCodeModel, Interval) == 0x000048, "Member 'FTUQrCodeModel::Interval' has a wrong offset!");

// ScriptStruct TapLogin.TUTestQualificationModel
// 0x0001 (0x0001 - 0x0000)
struct FTUTestQualificationModel final
{
public:
	bool                                          In_test;                                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTUTestQualificationModel) == 0x000001, "Wrong alignment on FTUTestQualificationModel");
static_assert(sizeof(FTUTestQualificationModel) == 0x000001, "Wrong size on FTUTestQualificationModel");
static_assert(offsetof(FTUTestQualificationModel, In_test) == 0x000000, "Member 'FTUTestQualificationModel::In_test' has a wrong offset!");

}

