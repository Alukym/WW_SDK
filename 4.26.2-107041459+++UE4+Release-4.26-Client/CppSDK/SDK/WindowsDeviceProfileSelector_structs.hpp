#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WindowsDeviceProfileSelector

#include "Basic.hpp"


namespace SDK
{

// Enum WindowsDeviceProfileSelector.EDataCompareType
// NumValues: 0x000F
enum class EDataCompareType : uint8
{
	WDCT_Equal                               = 0,
	WDCT_Less                                = 1,
	WDCT_LessEqual                           = 2,
	WDCT_Greater                             = 3,
	WDCT_GreaterEqual                        = 4,
	WDCT_NotEqual                            = 5,
	WDCT_Regex                               = 6,
	WDCT_EqualIgnore                         = 7,
	WDCT_LessIgnore                          = 8,
	WDCT_LessEqualIgnore                     = 9,
	WDCT_GreaterIgnore                       = 10,
	WDCT_GreaterEqualIgnore                  = 11,
	WDCT_NotEqualIgnore                      = 12,
	WDCT_Hash                                = 13,
	WDCT_MAX                                 = 14,
};

// Enum WindowsDeviceProfileSelector.EDataSourceType
// NumValues: 0x0004
enum class EDataSourceType : uint8
{
	WDST_PreviousRegexMatch                  = 0,
	WDST_CPUBrand                            = 1,
	WDST_GPUBrand                            = 2,
	WDST_MAX                                 = 3,
};

// ScriptStruct WindowsDeviceProfileSelector.WindowsDeviceProfileMatchItem
// 0x0018 (0x0018 - 0x0000)
struct FWindowsDeviceProfileMatchItem final
{
public:
	EDataSourceType                               SourceType;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDataCompareType                              CompareType;                                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_246D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MatchString;                                       // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWindowsDeviceProfileMatchItem) == 0x000008, "Wrong alignment on FWindowsDeviceProfileMatchItem");
static_assert(sizeof(FWindowsDeviceProfileMatchItem) == 0x000018, "Wrong size on FWindowsDeviceProfileMatchItem");
static_assert(offsetof(FWindowsDeviceProfileMatchItem, SourceType) == 0x000000, "Member 'FWindowsDeviceProfileMatchItem::SourceType' has a wrong offset!");
static_assert(offsetof(FWindowsDeviceProfileMatchItem, CompareType) == 0x000001, "Member 'FWindowsDeviceProfileMatchItem::CompareType' has a wrong offset!");
static_assert(offsetof(FWindowsDeviceProfileMatchItem, MatchString) == 0x000008, "Member 'FWindowsDeviceProfileMatchItem::MatchString' has a wrong offset!");

// ScriptStruct WindowsDeviceProfileSelector.WindowsDeviceProfileMatch
// 0x0020 (0x0020 - 0x0000)
struct FWindowsDeviceProfileMatch final
{
public:
	class FString                                 Profile;                                           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWindowsDeviceProfileMatchItem> Match;                                             // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWindowsDeviceProfileMatch) == 0x000008, "Wrong alignment on FWindowsDeviceProfileMatch");
static_assert(sizeof(FWindowsDeviceProfileMatch) == 0x000020, "Wrong size on FWindowsDeviceProfileMatch");
static_assert(offsetof(FWindowsDeviceProfileMatch, Profile) == 0x000000, "Member 'FWindowsDeviceProfileMatch::Profile' has a wrong offset!");
static_assert(offsetof(FWindowsDeviceProfileMatch, Match) == 0x000010, "Member 'FWindowsDeviceProfileMatch::Match' has a wrong offset!");

}

