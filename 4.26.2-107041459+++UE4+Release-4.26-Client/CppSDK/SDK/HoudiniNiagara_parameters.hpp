#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoudiniNiagara

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "HoudiniNiagara_structs.hpp"


namespace SDK::Params
{

// Function HoudiniNiagara.HoudiniPointCache.GetAttributeIndexInArrayFromString
// 0x0028 (0x0028 - 0x0000)
struct HoudiniPointCache_GetAttributeIndexInArrayFromString final
{
public:
	class FString                                 InAttribute;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         InAttributeArray;                                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         OutAttributeIndex;                                 // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D0B[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetAttributeIndexInArrayFromString) == 0x000008, "Wrong alignment on HoudiniPointCache_GetAttributeIndexInArrayFromString");
static_assert(sizeof(HoudiniPointCache_GetAttributeIndexInArrayFromString) == 0x000028, "Wrong size on HoudiniPointCache_GetAttributeIndexInArrayFromString");
static_assert(offsetof(HoudiniPointCache_GetAttributeIndexInArrayFromString, InAttribute) == 0x000000, "Member 'HoudiniPointCache_GetAttributeIndexInArrayFromString::InAttribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetAttributeIndexInArrayFromString, InAttributeArray) == 0x000010, "Member 'HoudiniPointCache_GetAttributeIndexInArrayFromString::InAttributeArray' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetAttributeIndexInArrayFromString, OutAttributeIndex) == 0x000020, "Member 'HoudiniPointCache_GetAttributeIndexInArrayFromString::OutAttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetAttributeIndexInArrayFromString, ReturnValue) == 0x000024, "Member 'HoudiniPointCache_GetAttributeIndexInArrayFromString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.SetUseCustomCSVTitleRow
// 0x0001 (0x0001 - 0x0000)
struct HoudiniPointCache_SetUseCustomCSVTitleRow final
{
public:
	bool                                          bInUseCustomCSVTitleRow;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_SetUseCustomCSVTitleRow) == 0x000001, "Wrong alignment on HoudiniPointCache_SetUseCustomCSVTitleRow");
static_assert(sizeof(HoudiniPointCache_SetUseCustomCSVTitleRow) == 0x000001, "Wrong size on HoudiniPointCache_SetUseCustomCSVTitleRow");
static_assert(offsetof(HoudiniPointCache_SetUseCustomCSVTitleRow, bInUseCustomCSVTitleRow) == 0x000000, "Member 'HoudiniPointCache_SetUseCustomCSVTitleRow::bInUseCustomCSVTitleRow' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetAttributeIndexFromString
// 0x0018 (0x0018 - 0x0000)
struct HoudiniPointCache_GetAttributeIndexFromString final
{
public:
	class FString                                 Attribute;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D0C[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetAttributeIndexFromString) == 0x000008, "Wrong alignment on HoudiniPointCache_GetAttributeIndexFromString");
static_assert(sizeof(HoudiniPointCache_GetAttributeIndexFromString) == 0x000018, "Wrong size on HoudiniPointCache_GetAttributeIndexFromString");
static_assert(offsetof(HoudiniPointCache_GetAttributeIndexFromString, Attribute) == 0x000000, "Member 'HoudiniPointCache_GetAttributeIndexFromString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetAttributeIndexFromString, AttributeIndex) == 0x000010, "Member 'HoudiniPointCache_GetAttributeIndexFromString::AttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetAttributeIndexFromString, ReturnValue) == 0x000014, "Member 'HoudiniPointCache_GetAttributeIndexFromString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetColorValue
// 0x0018 (0x0018 - 0x0000)
struct HoudiniPointCache_GetColorValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D0D[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetColorValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetColorValue");
static_assert(sizeof(HoudiniPointCache_GetColorValue) == 0x000018, "Wrong size on HoudiniPointCache_GetColorValue");
static_assert(offsetof(HoudiniPointCache_GetColorValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetColorValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetColorValue, Value) == 0x000004, "Member 'HoudiniPointCache_GetColorValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetColorValue, ReturnValue) == 0x000014, "Member 'HoudiniPointCache_GetColorValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetFloatSampleData
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetFloatSampleData final
{
public:
	TArray<float>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetFloatSampleData) == 0x000008, "Wrong alignment on HoudiniPointCache_GetFloatSampleData");
static_assert(sizeof(HoudiniPointCache_GetFloatSampleData) == 0x000010, "Wrong size on HoudiniPointCache_GetFloatSampleData");
static_assert(offsetof(HoudiniPointCache_GetFloatSampleData, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetFloatSampleData::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetFloatValue
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetFloatValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttrIndex;                                         // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D0E[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetFloatValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetFloatValue");
static_assert(sizeof(HoudiniPointCache_GetFloatValue) == 0x000010, "Wrong size on HoudiniPointCache_GetFloatValue");
static_assert(offsetof(HoudiniPointCache_GetFloatValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetFloatValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetFloatValue, AttrIndex) == 0x000004, "Member 'HoudiniPointCache_GetFloatValue::AttrIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetFloatValue, Value) == 0x000008, "Member 'HoudiniPointCache_GetFloatValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetFloatValue, ReturnValue) == 0x00000C, "Member 'HoudiniPointCache_GetFloatValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetFloatValueForString
// 0x0020 (0x0020 - 0x0000)
struct HoudiniPointCache_GetFloatValueForString final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D0F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D10[0x3];                                     // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetFloatValueForString) == 0x000008, "Wrong alignment on HoudiniPointCache_GetFloatValueForString");
static_assert(sizeof(HoudiniPointCache_GetFloatValueForString) == 0x000020, "Wrong size on HoudiniPointCache_GetFloatValueForString");
static_assert(offsetof(HoudiniPointCache_GetFloatValueForString, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetFloatValueForString::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetFloatValueForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetFloatValueForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetFloatValueForString, Value) == 0x000018, "Member 'HoudiniPointCache_GetFloatValueForString::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetFloatValueForString, ReturnValue) == 0x00001C, "Member 'HoudiniPointCache_GetFloatValueForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetImpulseValue
// 0x000C (0x000C - 0x0000)
struct HoudiniPointCache_GetImpulseValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D11[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetImpulseValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetImpulseValue");
static_assert(sizeof(HoudiniPointCache_GetImpulseValue) == 0x00000C, "Wrong size on HoudiniPointCache_GetImpulseValue");
static_assert(offsetof(HoudiniPointCache_GetImpulseValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetImpulseValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetImpulseValue, Value) == 0x000004, "Member 'HoudiniPointCache_GetImpulseValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetImpulseValue, ReturnValue) == 0x000008, "Member 'HoudiniPointCache_GetImpulseValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetLastPointIDToSpawnAtTime
// 0x000C (0x000C - 0x0000)
struct HoudiniPointCache_GetLastPointIDToSpawnAtTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastID;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D12[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetLastPointIDToSpawnAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetLastPointIDToSpawnAtTime");
static_assert(sizeof(HoudiniPointCache_GetLastPointIDToSpawnAtTime) == 0x00000C, "Wrong size on HoudiniPointCache_GetLastPointIDToSpawnAtTime");
static_assert(offsetof(HoudiniPointCache_GetLastPointIDToSpawnAtTime, Time) == 0x000000, "Member 'HoudiniPointCache_GetLastPointIDToSpawnAtTime::Time' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetLastPointIDToSpawnAtTime, LastID) == 0x000004, "Member 'HoudiniPointCache_GetLastPointIDToSpawnAtTime::LastID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetLastPointIDToSpawnAtTime, ReturnValue) == 0x000008, "Member 'HoudiniPointCache_GetLastPointIDToSpawnAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetLastSampleIndexAtTime
// 0x000C (0x000C - 0x0000)
struct HoudiniPointCache_GetLastSampleIndexAtTime final
{
public:
	float                                         DesiredTime;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastSampleIndex;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D13[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetLastSampleIndexAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetLastSampleIndexAtTime");
static_assert(sizeof(HoudiniPointCache_GetLastSampleIndexAtTime) == 0x00000C, "Wrong size on HoudiniPointCache_GetLastSampleIndexAtTime");
static_assert(offsetof(HoudiniPointCache_GetLastSampleIndexAtTime, DesiredTime) == 0x000000, "Member 'HoudiniPointCache_GetLastSampleIndexAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetLastSampleIndexAtTime, LastSampleIndex) == 0x000004, "Member 'HoudiniPointCache_GetLastSampleIndexAtTime::LastSampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetLastSampleIndexAtTime, ReturnValue) == 0x000008, "Member 'HoudiniPointCache_GetLastSampleIndexAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetLifeValues
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetLifeValues final
{
public:
	TArray<float>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetLifeValues) == 0x000008, "Wrong alignment on HoudiniPointCache_GetLifeValues");
static_assert(sizeof(HoudiniPointCache_GetLifeValues) == 0x000010, "Wrong size on HoudiniPointCache_GetLifeValues");
static_assert(offsetof(HoudiniPointCache_GetLifeValues, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetLifeValues::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetNormalValue
// 0x0014 (0x0014 - 0x0000)
struct HoudiniPointCache_GetNormalValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D14[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetNormalValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetNormalValue");
static_assert(sizeof(HoudiniPointCache_GetNormalValue) == 0x000014, "Wrong size on HoudiniPointCache_GetNormalValue");
static_assert(offsetof(HoudiniPointCache_GetNormalValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetNormalValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetNormalValue, Value) == 0x000004, "Member 'HoudiniPointCache_GetNormalValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetNormalValue, ReturnValue) == 0x000010, "Member 'HoudiniPointCache_GetNormalValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetNumberOfAttributes
// 0x0004 (0x0004 - 0x0000)
struct HoudiniPointCache_GetNumberOfAttributes final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetNumberOfAttributes) == 0x000004, "Wrong alignment on HoudiniPointCache_GetNumberOfAttributes");
static_assert(sizeof(HoudiniPointCache_GetNumberOfAttributes) == 0x000004, "Wrong size on HoudiniPointCache_GetNumberOfAttributes");
static_assert(offsetof(HoudiniPointCache_GetNumberOfAttributes, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetNumberOfAttributes::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetNumberOfPoints
// 0x0004 (0x0004 - 0x0000)
struct HoudiniPointCache_GetNumberOfPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetNumberOfPoints) == 0x000004, "Wrong alignment on HoudiniPointCache_GetNumberOfPoints");
static_assert(sizeof(HoudiniPointCache_GetNumberOfPoints) == 0x000004, "Wrong size on HoudiniPointCache_GetNumberOfPoints");
static_assert(offsetof(HoudiniPointCache_GetNumberOfPoints, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetNumberOfPoints::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetNumberOfSamples
// 0x0004 (0x0004 - 0x0000)
struct HoudiniPointCache_GetNumberOfSamples final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetNumberOfSamples) == 0x000004, "Wrong alignment on HoudiniPointCache_GetNumberOfSamples");
static_assert(sizeof(HoudiniPointCache_GetNumberOfSamples) == 0x000004, "Wrong size on HoudiniPointCache_GetNumberOfSamples");
static_assert(offsetof(HoudiniPointCache_GetNumberOfSamples, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetNumberOfSamples::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointFloatValueAtTime
// 0x0014 (0x0014 - 0x0000)
struct HoudiniPointCache_GetPointFloatValueAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D15[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointFloatValueAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointFloatValueAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointFloatValueAtTime) == 0x000014, "Wrong size on HoudiniPointCache_GetPointFloatValueAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointFloatValueAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointFloatValueAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointFloatValueAtTime, AttributeIndex) == 0x000004, "Member 'HoudiniPointCache_GetPointFloatValueAtTime::AttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointFloatValueAtTime, DesiredTime) == 0x000008, "Member 'HoudiniPointCache_GetPointFloatValueAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointFloatValueAtTime, Value) == 0x00000C, "Member 'HoudiniPointCache_GetPointFloatValueAtTime::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointFloatValueAtTime, ReturnValue) == 0x000010, "Member 'HoudiniPointCache_GetPointFloatValueAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointIDsToSpawnAtTime
// 0x0020 (0x0020 - 0x0000)
struct HoudiniPointCache_GetPointIDsToSpawnAtTime final
{
public:
	float                                         DesiredTime;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinID;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxID;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastSpawnedPointID;                                // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastSpawnTime;                                     // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastSpawnTimeRequest;                              // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D16[0x3];                                     // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointIDsToSpawnAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointIDsToSpawnAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointIDsToSpawnAtTime) == 0x000020, "Wrong size on HoudiniPointCache_GetPointIDsToSpawnAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, DesiredTime) == 0x000000, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, MinID) == 0x000004, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::MinID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, MaxID) == 0x000008, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::MaxID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, Count) == 0x00000C, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::Count' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, LastSpawnedPointID) == 0x000010, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::LastSpawnedPointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, LastSpawnTime) == 0x000014, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::LastSpawnTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, LastSpawnTimeRequest) == 0x000018, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::LastSpawnTimeRequest' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointIDsToSpawnAtTime, ReturnValue) == 0x00001C, "Member 'HoudiniPointCache_GetPointIDsToSpawnAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointInt32ValueAtTime
// 0x0014 (0x0014 - 0x0000)
struct HoudiniPointCache_GetPointInt32ValueAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D17[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointInt32ValueAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointInt32ValueAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointInt32ValueAtTime) == 0x000014, "Wrong size on HoudiniPointCache_GetPointInt32ValueAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointInt32ValueAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointInt32ValueAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointInt32ValueAtTime, AttributeIndex) == 0x000004, "Member 'HoudiniPointCache_GetPointInt32ValueAtTime::AttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointInt32ValueAtTime, DesiredTime) == 0x000008, "Member 'HoudiniPointCache_GetPointInt32ValueAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointInt32ValueAtTime, Value) == 0x00000C, "Member 'HoudiniPointCache_GetPointInt32ValueAtTime::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointInt32ValueAtTime, ReturnValue) == 0x000010, "Member 'HoudiniPointCache_GetPointInt32ValueAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointLife
// 0x000C (0x000C - 0x0000)
struct HoudiniPointCache_GetPointLife final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D18[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointLife) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointLife");
static_assert(sizeof(HoudiniPointCache_GetPointLife) == 0x00000C, "Wrong size on HoudiniPointCache_GetPointLife");
static_assert(offsetof(HoudiniPointCache_GetPointLife, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointLife::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointLife, Value) == 0x000004, "Member 'HoudiniPointCache_GetPointLife::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointLife, ReturnValue) == 0x000008, "Member 'HoudiniPointCache_GetPointLife::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointLifeAtTime
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetPointLifeAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D19[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointLifeAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointLifeAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointLifeAtTime) == 0x000010, "Wrong size on HoudiniPointCache_GetPointLifeAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointLifeAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointLifeAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointLifeAtTime, DesiredTime) == 0x000004, "Member 'HoudiniPointCache_GetPointLifeAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointLifeAtTime, Value) == 0x000008, "Member 'HoudiniPointCache_GetPointLifeAtTime::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointLifeAtTime, ReturnValue) == 0x00000C, "Member 'HoudiniPointCache_GetPointLifeAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointPositionAtTime
// 0x0018 (0x0018 - 0x0000)
struct HoudiniPointCache_GetPointPositionAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vector;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1A[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointPositionAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointPositionAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointPositionAtTime) == 0x000018, "Wrong size on HoudiniPointCache_GetPointPositionAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointPositionAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointPositionAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointPositionAtTime, DesiredTime) == 0x000004, "Member 'HoudiniPointCache_GetPointPositionAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointPositionAtTime, Vector) == 0x000008, "Member 'HoudiniPointCache_GetPointPositionAtTime::Vector' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointPositionAtTime, ReturnValue) == 0x000014, "Member 'HoudiniPointCache_GetPointPositionAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointQuatValueAtTime
// 0x0030 (0x0030 - 0x0000)
struct HoudiniPointCache_GetPointQuatValueAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Quat;                                              // 0x0010(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          DoHoudiniToUnrealConversion;                       // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1C[0xE];                                     // 0x0022(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointQuatValueAtTime) == 0x000010, "Wrong alignment on HoudiniPointCache_GetPointQuatValueAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointQuatValueAtTime) == 0x000030, "Wrong size on HoudiniPointCache_GetPointQuatValueAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointQuatValueAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTime, AttributeIndex) == 0x000004, "Member 'HoudiniPointCache_GetPointQuatValueAtTime::AttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTime, DesiredTime) == 0x000008, "Member 'HoudiniPointCache_GetPointQuatValueAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTime, Quat) == 0x000010, "Member 'HoudiniPointCache_GetPointQuatValueAtTime::Quat' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTime, DoHoudiniToUnrealConversion) == 0x000020, "Member 'HoudiniPointCache_GetPointQuatValueAtTime::DoHoudiniToUnrealConversion' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTime, ReturnValue) == 0x000021, "Member 'HoudiniPointCache_GetPointQuatValueAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointQuatValueAtTimeForString
// 0x0040 (0x0040 - 0x0000)
struct HoudiniPointCache_GetPointQuatValueAtTimeForString final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Quat;                                              // 0x0020(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          DoHoudiniToUnrealConversion;                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1F[0xE];                                     // 0x0032(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointQuatValueAtTimeForString) == 0x000010, "Wrong alignment on HoudiniPointCache_GetPointQuatValueAtTimeForString");
static_assert(sizeof(HoudiniPointCache_GetPointQuatValueAtTimeForString) == 0x000040, "Wrong size on HoudiniPointCache_GetPointQuatValueAtTimeForString");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTimeForString, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointQuatValueAtTimeForString::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTimeForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetPointQuatValueAtTimeForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTimeForString, DesiredTime) == 0x000018, "Member 'HoudiniPointCache_GetPointQuatValueAtTimeForString::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTimeForString, Quat) == 0x000020, "Member 'HoudiniPointCache_GetPointQuatValueAtTimeForString::Quat' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTimeForString, DoHoudiniToUnrealConversion) == 0x000030, "Member 'HoudiniPointCache_GetPointQuatValueAtTimeForString::DoHoudiniToUnrealConversion' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointQuatValueAtTimeForString, ReturnValue) == 0x000031, "Member 'HoudiniPointCache_GetPointQuatValueAtTimeForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointType
// 0x000C (0x000C - 0x0000)
struct HoudiniPointCache_GetPointType final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D20[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointType) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointType");
static_assert(sizeof(HoudiniPointCache_GetPointType) == 0x00000C, "Wrong size on HoudiniPointCache_GetPointType");
static_assert(offsetof(HoudiniPointCache_GetPointType, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointType::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointType, Value) == 0x000004, "Member 'HoudiniPointCache_GetPointType::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointType, ReturnValue) == 0x000008, "Member 'HoudiniPointCache_GetPointType::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointTypes
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetPointTypes final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetPointTypes) == 0x000008, "Wrong alignment on HoudiniPointCache_GetPointTypes");
static_assert(sizeof(HoudiniPointCache_GetPointTypes) == 0x000010, "Wrong size on HoudiniPointCache_GetPointTypes");
static_assert(offsetof(HoudiniPointCache_GetPointTypes, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetPointTypes::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointValueAtTime
// 0x0014 (0x0014 - 0x0000)
struct HoudiniPointCache_GetPointValueAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D21[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointValueAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointValueAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointValueAtTime) == 0x000014, "Wrong size on HoudiniPointCache_GetPointValueAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointValueAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTime, AttributeIndex) == 0x000004, "Member 'HoudiniPointCache_GetPointValueAtTime::AttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTime, DesiredTime) == 0x000008, "Member 'HoudiniPointCache_GetPointValueAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTime, Value) == 0x00000C, "Member 'HoudiniPointCache_GetPointValueAtTime::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTime, ReturnValue) == 0x000010, "Member 'HoudiniPointCache_GetPointValueAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointValueAtTimeForString
// 0x0028 (0x0028 - 0x0000)
struct HoudiniPointCache_GetPointValueAtTimeForString final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D22[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0018(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D23[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointValueAtTimeForString) == 0x000008, "Wrong alignment on HoudiniPointCache_GetPointValueAtTimeForString");
static_assert(sizeof(HoudiniPointCache_GetPointValueAtTimeForString) == 0x000028, "Wrong size on HoudiniPointCache_GetPointValueAtTimeForString");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTimeForString, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointValueAtTimeForString::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTimeForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetPointValueAtTimeForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTimeForString, DesiredTime) == 0x000018, "Member 'HoudiniPointCache_GetPointValueAtTimeForString::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTimeForString, Value) == 0x00001C, "Member 'HoudiniPointCache_GetPointValueAtTimeForString::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointValueAtTimeForString, ReturnValue) == 0x000020, "Member 'HoudiniPointCache_GetPointValueAtTimeForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointValueIndexes
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetPointValueIndexes final
{
public:
	TArray<struct FPointIndexes>                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetPointValueIndexes) == 0x000008, "Wrong alignment on HoudiniPointCache_GetPointValueIndexes");
static_assert(sizeof(HoudiniPointCache_GetPointValueIndexes) == 0x000010, "Wrong size on HoudiniPointCache_GetPointValueIndexes");
static_assert(offsetof(HoudiniPointCache_GetPointValueIndexes, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetPointValueIndexes::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointVector4ValueAtTime
// 0x0030 (0x0030 - 0x0000)
struct HoudiniPointCache_GetPointVector4ValueAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D24[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Vector;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D25[0xF];                                     // 0x0021(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointVector4ValueAtTime) == 0x000010, "Wrong alignment on HoudiniPointCache_GetPointVector4ValueAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointVector4ValueAtTime) == 0x000030, "Wrong size on HoudiniPointCache_GetPointVector4ValueAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointVector4ValueAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTime, AttributeIndex) == 0x000004, "Member 'HoudiniPointCache_GetPointVector4ValueAtTime::AttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTime, DesiredTime) == 0x000008, "Member 'HoudiniPointCache_GetPointVector4ValueAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTime, Vector) == 0x000010, "Member 'HoudiniPointCache_GetPointVector4ValueAtTime::Vector' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTime, ReturnValue) == 0x000020, "Member 'HoudiniPointCache_GetPointVector4ValueAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointVector4ValueAtTimeForString
// 0x0040 (0x0040 - 0x0000)
struct HoudiniPointCache_GetPointVector4ValueAtTimeForString final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D26[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D27[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Vector;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D28[0xF];                                     // 0x0031(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointVector4ValueAtTimeForString) == 0x000010, "Wrong alignment on HoudiniPointCache_GetPointVector4ValueAtTimeForString");
static_assert(sizeof(HoudiniPointCache_GetPointVector4ValueAtTimeForString) == 0x000040, "Wrong size on HoudiniPointCache_GetPointVector4ValueAtTimeForString");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTimeForString, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointVector4ValueAtTimeForString::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTimeForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetPointVector4ValueAtTimeForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTimeForString, DesiredTime) == 0x000018, "Member 'HoudiniPointCache_GetPointVector4ValueAtTimeForString::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTimeForString, Vector) == 0x000020, "Member 'HoudiniPointCache_GetPointVector4ValueAtTimeForString::Vector' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVector4ValueAtTimeForString, ReturnValue) == 0x000030, "Member 'HoudiniPointCache_GetPointVector4ValueAtTimeForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointVectorValueAtTime
// 0x001C (0x001C - 0x0000)
struct HoudiniPointCache_GetPointVectorValueAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vector;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoSwap;                                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoScale;                                           // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D29[0x1];                                     // 0x001B(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointVectorValueAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPointVectorValueAtTime");
static_assert(sizeof(HoudiniPointCache_GetPointVectorValueAtTime) == 0x00001C, "Wrong size on HoudiniPointCache_GetPointVectorValueAtTime");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointVectorValueAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTime, AttributeIndex) == 0x000004, "Member 'HoudiniPointCache_GetPointVectorValueAtTime::AttributeIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTime, DesiredTime) == 0x000008, "Member 'HoudiniPointCache_GetPointVectorValueAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTime, Vector) == 0x00000C, "Member 'HoudiniPointCache_GetPointVectorValueAtTime::Vector' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTime, DoSwap) == 0x000018, "Member 'HoudiniPointCache_GetPointVectorValueAtTime::DoSwap' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTime, DoScale) == 0x000019, "Member 'HoudiniPointCache_GetPointVectorValueAtTime::DoScale' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTime, ReturnValue) == 0x00001A, "Member 'HoudiniPointCache_GetPointVectorValueAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPointVectorValueAtTimeForString
// 0x0030 (0x0030 - 0x0000)
struct HoudiniPointCache_GetPointVectorValueAtTimeForString final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D2A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vector;                                            // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoSwap;                                            // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoScale;                                           // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D2B[0x5];                                     // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPointVectorValueAtTimeForString) == 0x000008, "Wrong alignment on HoudiniPointCache_GetPointVectorValueAtTimeForString");
static_assert(sizeof(HoudiniPointCache_GetPointVectorValueAtTimeForString) == 0x000030, "Wrong size on HoudiniPointCache_GetPointVectorValueAtTimeForString");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTimeForString, PointID) == 0x000000, "Member 'HoudiniPointCache_GetPointVectorValueAtTimeForString::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTimeForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetPointVectorValueAtTimeForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTimeForString, DesiredTime) == 0x000018, "Member 'HoudiniPointCache_GetPointVectorValueAtTimeForString::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTimeForString, Vector) == 0x00001C, "Member 'HoudiniPointCache_GetPointVectorValueAtTimeForString::Vector' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTimeForString, DoSwap) == 0x000028, "Member 'HoudiniPointCache_GetPointVectorValueAtTimeForString::DoSwap' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTimeForString, DoScale) == 0x000029, "Member 'HoudiniPointCache_GetPointVectorValueAtTimeForString::DoScale' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPointVectorValueAtTimeForString, ReturnValue) == 0x00002A, "Member 'HoudiniPointCache_GetPointVectorValueAtTimeForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetPositionValue
// 0x0014 (0x0014 - 0x0000)
struct HoudiniPointCache_GetPositionValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D2C[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetPositionValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetPositionValue");
static_assert(sizeof(HoudiniPointCache_GetPositionValue) == 0x000014, "Wrong size on HoudiniPointCache_GetPositionValue");
static_assert(offsetof(HoudiniPointCache_GetPositionValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetPositionValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPositionValue, Value) == 0x000004, "Member 'HoudiniPointCache_GetPositionValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetPositionValue, ReturnValue) == 0x000010, "Member 'HoudiniPointCache_GetPositionValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetQuatValue
// 0x0030 (0x0030 - 0x0000)
struct HoudiniPointCache_GetQuatValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttrIndex;                                         // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D2D[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Value;                                             // 0x0010(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          DoHoudiniToUnrealConversion;                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D2E[0xE];                                     // 0x0022(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetQuatValue) == 0x000010, "Wrong alignment on HoudiniPointCache_GetQuatValue");
static_assert(sizeof(HoudiniPointCache_GetQuatValue) == 0x000030, "Wrong size on HoudiniPointCache_GetQuatValue");
static_assert(offsetof(HoudiniPointCache_GetQuatValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetQuatValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValue, AttrIndex) == 0x000004, "Member 'HoudiniPointCache_GetQuatValue::AttrIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValue, Value) == 0x000010, "Member 'HoudiniPointCache_GetQuatValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValue, DoHoudiniToUnrealConversion) == 0x000020, "Member 'HoudiniPointCache_GetQuatValue::DoHoudiniToUnrealConversion' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValue, ReturnValue) == 0x000021, "Member 'HoudiniPointCache_GetQuatValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetQuatValueForString
// 0x0040 (0x0040 - 0x0000)
struct HoudiniPointCache_GetQuatValueForString final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D2F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D30[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Value;                                             // 0x0020(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          DoHoudiniToUnrealConversion;                       // 0x0030(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D31[0xE];                                     // 0x0032(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetQuatValueForString) == 0x000010, "Wrong alignment on HoudiniPointCache_GetQuatValueForString");
static_assert(sizeof(HoudiniPointCache_GetQuatValueForString) == 0x000040, "Wrong size on HoudiniPointCache_GetQuatValueForString");
static_assert(offsetof(HoudiniPointCache_GetQuatValueForString, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetQuatValueForString::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValueForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetQuatValueForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValueForString, Value) == 0x000020, "Member 'HoudiniPointCache_GetQuatValueForString::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValueForString, DoHoudiniToUnrealConversion) == 0x000030, "Member 'HoudiniPointCache_GetQuatValueForString::DoHoudiniToUnrealConversion' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetQuatValueForString, ReturnValue) == 0x000031, "Member 'HoudiniPointCache_GetQuatValueForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetSampleIndexesForPointAtTime
// 0x0018 (0x0018 - 0x0000)
struct HoudiniPointCache_GetSampleIndexesForPointAtTime final
{
public:
	int32                                         PointID;                                           // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredTime;                                       // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrevSampleIndex;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NextSampleIndex;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PrevWeight;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D32[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetSampleIndexesForPointAtTime) == 0x000004, "Wrong alignment on HoudiniPointCache_GetSampleIndexesForPointAtTime");
static_assert(sizeof(HoudiniPointCache_GetSampleIndexesForPointAtTime) == 0x000018, "Wrong size on HoudiniPointCache_GetSampleIndexesForPointAtTime");
static_assert(offsetof(HoudiniPointCache_GetSampleIndexesForPointAtTime, PointID) == 0x000000, "Member 'HoudiniPointCache_GetSampleIndexesForPointAtTime::PointID' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetSampleIndexesForPointAtTime, DesiredTime) == 0x000004, "Member 'HoudiniPointCache_GetSampleIndexesForPointAtTime::DesiredTime' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetSampleIndexesForPointAtTime, PrevSampleIndex) == 0x000008, "Member 'HoudiniPointCache_GetSampleIndexesForPointAtTime::PrevSampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetSampleIndexesForPointAtTime, NextSampleIndex) == 0x00000C, "Member 'HoudiniPointCache_GetSampleIndexesForPointAtTime::NextSampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetSampleIndexesForPointAtTime, PrevWeight) == 0x000010, "Member 'HoudiniPointCache_GetSampleIndexesForPointAtTime::PrevWeight' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetSampleIndexesForPointAtTime, ReturnValue) == 0x000014, "Member 'HoudiniPointCache_GetSampleIndexesForPointAtTime::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetSpawnTimes
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetSpawnTimes final
{
public:
	TArray<float>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetSpawnTimes) == 0x000008, "Wrong alignment on HoudiniPointCache_GetSpawnTimes");
static_assert(sizeof(HoudiniPointCache_GetSpawnTimes) == 0x000010, "Wrong size on HoudiniPointCache_GetSpawnTimes");
static_assert(offsetof(HoudiniPointCache_GetSpawnTimes, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetSpawnTimes::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetSpecialAttributeIndexes
// 0x0010 (0x0010 - 0x0000)
struct HoudiniPointCache_GetSpecialAttributeIndexes final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetSpecialAttributeIndexes) == 0x000008, "Wrong alignment on HoudiniPointCache_GetSpecialAttributeIndexes");
static_assert(sizeof(HoudiniPointCache_GetSpecialAttributeIndexes) == 0x000010, "Wrong size on HoudiniPointCache_GetSpecialAttributeIndexes");
static_assert(offsetof(HoudiniPointCache_GetSpecialAttributeIndexes, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetSpecialAttributeIndexes::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetTimeValue
// 0x000C (0x000C - 0x0000)
struct HoudiniPointCache_GetTimeValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D33[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetTimeValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetTimeValue");
static_assert(sizeof(HoudiniPointCache_GetTimeValue) == 0x00000C, "Wrong size on HoudiniPointCache_GetTimeValue");
static_assert(offsetof(HoudiniPointCache_GetTimeValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetTimeValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetTimeValue, Value) == 0x000004, "Member 'HoudiniPointCache_GetTimeValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetTimeValue, ReturnValue) == 0x000008, "Member 'HoudiniPointCache_GetTimeValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetUseCustomCSVTitleRow
// 0x0001 (0x0001 - 0x0000)
struct HoudiniPointCache_GetUseCustomCSVTitleRow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HoudiniPointCache_GetUseCustomCSVTitleRow) == 0x000001, "Wrong alignment on HoudiniPointCache_GetUseCustomCSVTitleRow");
static_assert(sizeof(HoudiniPointCache_GetUseCustomCSVTitleRow) == 0x000001, "Wrong size on HoudiniPointCache_GetUseCustomCSVTitleRow");
static_assert(offsetof(HoudiniPointCache_GetUseCustomCSVTitleRow, ReturnValue) == 0x000000, "Member 'HoudiniPointCache_GetUseCustomCSVTitleRow::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetVector4Value
// 0x0030 (0x0030 - 0x0000)
struct HoudiniPointCache_GetVector4Value final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttrIndex;                                         // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D34[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Value;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D35[0xF];                                     // 0x0021(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetVector4Value) == 0x000010, "Wrong alignment on HoudiniPointCache_GetVector4Value");
static_assert(sizeof(HoudiniPointCache_GetVector4Value) == 0x000030, "Wrong size on HoudiniPointCache_GetVector4Value");
static_assert(offsetof(HoudiniPointCache_GetVector4Value, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetVector4Value::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVector4Value, AttrIndex) == 0x000004, "Member 'HoudiniPointCache_GetVector4Value::AttrIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVector4Value, Value) == 0x000010, "Member 'HoudiniPointCache_GetVector4Value::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVector4Value, ReturnValue) == 0x000020, "Member 'HoudiniPointCache_GetVector4Value::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetVector4ValueForString
// 0x0040 (0x0040 - 0x0000)
struct HoudiniPointCache_GetVector4ValueForString final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D36[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D37[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Value;                                             // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D38[0xF];                                     // 0x0031(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetVector4ValueForString) == 0x000010, "Wrong alignment on HoudiniPointCache_GetVector4ValueForString");
static_assert(sizeof(HoudiniPointCache_GetVector4ValueForString) == 0x000040, "Wrong size on HoudiniPointCache_GetVector4ValueForString");
static_assert(offsetof(HoudiniPointCache_GetVector4ValueForString, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetVector4ValueForString::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVector4ValueForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetVector4ValueForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVector4ValueForString, Value) == 0x000020, "Member 'HoudiniPointCache_GetVector4ValueForString::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVector4ValueForString, ReturnValue) == 0x000030, "Member 'HoudiniPointCache_GetVector4ValueForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetVectorValue
// 0x0018 (0x0018 - 0x0000)
struct HoudiniPointCache_GetVectorValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttrIndex;                                         // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoSwap;                                            // 0x0014(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoScale;                                           // 0x0015(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0016(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D39[0x1];                                     // 0x0017(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetVectorValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetVectorValue");
static_assert(sizeof(HoudiniPointCache_GetVectorValue) == 0x000018, "Wrong size on HoudiniPointCache_GetVectorValue");
static_assert(offsetof(HoudiniPointCache_GetVectorValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetVectorValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValue, AttrIndex) == 0x000004, "Member 'HoudiniPointCache_GetVectorValue::AttrIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValue, Value) == 0x000008, "Member 'HoudiniPointCache_GetVectorValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValue, DoSwap) == 0x000014, "Member 'HoudiniPointCache_GetVectorValue::DoSwap' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValue, DoScale) == 0x000015, "Member 'HoudiniPointCache_GetVectorValue::DoScale' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValue, ReturnValue) == 0x000016, "Member 'HoudiniPointCache_GetVectorValue::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetVectorValueForString
// 0x0028 (0x0028 - 0x0000)
struct HoudiniPointCache_GetVectorValueForString final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D3A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoSwap;                                            // 0x0024(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoScale;                                           // 0x0025(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0026(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D3B[0x1];                                     // 0x0027(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetVectorValueForString) == 0x000008, "Wrong alignment on HoudiniPointCache_GetVectorValueForString");
static_assert(sizeof(HoudiniPointCache_GetVectorValueForString) == 0x000028, "Wrong size on HoudiniPointCache_GetVectorValueForString");
static_assert(offsetof(HoudiniPointCache_GetVectorValueForString, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetVectorValueForString::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValueForString, Attribute) == 0x000008, "Member 'HoudiniPointCache_GetVectorValueForString::Attribute' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValueForString, Value) == 0x000018, "Member 'HoudiniPointCache_GetVectorValueForString::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValueForString, DoSwap) == 0x000024, "Member 'HoudiniPointCache_GetVectorValueForString::DoSwap' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValueForString, DoScale) == 0x000025, "Member 'HoudiniPointCache_GetVectorValueForString::DoScale' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVectorValueForString, ReturnValue) == 0x000026, "Member 'HoudiniPointCache_GetVectorValueForString::ReturnValue' has a wrong offset!");

// Function HoudiniNiagara.HoudiniPointCache.GetVelocityValue
// 0x0014 (0x0014 - 0x0000)
struct HoudiniPointCache_GetVelocityValue final
{
public:
	int32                                         SampleIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D3C[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HoudiniPointCache_GetVelocityValue) == 0x000004, "Wrong alignment on HoudiniPointCache_GetVelocityValue");
static_assert(sizeof(HoudiniPointCache_GetVelocityValue) == 0x000014, "Wrong size on HoudiniPointCache_GetVelocityValue");
static_assert(offsetof(HoudiniPointCache_GetVelocityValue, SampleIndex) == 0x000000, "Member 'HoudiniPointCache_GetVelocityValue::SampleIndex' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVelocityValue, Value) == 0x000004, "Member 'HoudiniPointCache_GetVelocityValue::Value' has a wrong offset!");
static_assert(offsetof(HoudiniPointCache_GetVelocityValue, ReturnValue) == 0x000010, "Member 'HoudiniPointCache_GetVelocityValue::ReturnValue' has a wrong offset!");

}

