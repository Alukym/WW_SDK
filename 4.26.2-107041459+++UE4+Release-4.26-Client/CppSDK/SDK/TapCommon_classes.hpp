#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TapCommon

#include "Basic.hpp"

#include "TapCommon_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "SlateCore_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class TapCommon.TapBoxWrapperWidgetStyle
// 0x0360 (0x0398 - 0x0038)
class UTapBoxWrapperWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FTapBoxWrapperStyle                    WidgetStyle;                                       // 0x0038(0x0360)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapBoxWrapperWidgetStyle">();
	}
	static class UTapBoxWrapperWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapBoxWrapperWidgetStyle>();
	}
};
static_assert(alignof(UTapBoxWrapperWidgetStyle) == 0x000008, "Wrong alignment on UTapBoxWrapperWidgetStyle");
static_assert(sizeof(UTapBoxWrapperWidgetStyle) == 0x000398, "Wrong size on UTapBoxWrapperWidgetStyle");
static_assert(offsetof(UTapBoxWrapperWidgetStyle, WidgetStyle) == 0x000038, "Member 'UTapBoxWrapperWidgetStyle::WidgetStyle' has a wrong offset!");

// Class TapCommon.TapButton
// 0x0028 (0x0168 - 0x0140)
class UTapButton final : public UContentWidget
{
public:
	ETapButtonStyleType                           StyleType;                                         // 0x0140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_228D[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_228E[0x10];                                    // 0x0158(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapButton">();
	}
	static class UTapButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapButton>();
	}
};
static_assert(alignof(UTapButton) == 0x000008, "Wrong alignment on UTapButton");
static_assert(sizeof(UTapButton) == 0x000168, "Wrong size on UTapButton");
static_assert(offsetof(UTapButton, StyleType) == 0x000140, "Member 'UTapButton::StyleType' has a wrong offset!");
static_assert(offsetof(UTapButton, OnClicked) == 0x000148, "Member 'UTapButton::OnClicked' has a wrong offset!");

// Class TapCommon.TapThrobberWidgetStyle
// 0x08A8 (0x08E0 - 0x0038)
class UTapThrobberWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FTapThrobberStyle                      WidgetStyle;                                       // 0x0038(0x08A8)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapThrobberWidgetStyle">();
	}
	static class UTapThrobberWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapThrobberWidgetStyle>();
	}
};
static_assert(alignof(UTapThrobberWidgetStyle) == 0x000008, "Wrong alignment on UTapThrobberWidgetStyle");
static_assert(sizeof(UTapThrobberWidgetStyle) == 0x0008E0, "Wrong size on UTapThrobberWidgetStyle");
static_assert(offsetof(UTapThrobberWidgetStyle, WidgetStyle) == 0x000038, "Member 'UTapThrobberWidgetStyle::WidgetStyle' has a wrong offset!");

// Class TapCommon.TapButtonSlot
// 0x0028 (0x0068 - 0x0040)
class UTapButtonSlot final : public UPanelSlot
{
public:
	struct FMargin                                Padding;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0051(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_228F[0x16];                                    // 0x0052(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
	void SetPadding(const struct FMargin& InPadding);
	void SetVerticalAlignment(EVerticalAlignment InVerticalAlignment);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapButtonSlot">();
	}
	static class UTapButtonSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapButtonSlot>();
	}
};
static_assert(alignof(UTapButtonSlot) == 0x000008, "Wrong alignment on UTapButtonSlot");
static_assert(sizeof(UTapButtonSlot) == 0x000068, "Wrong size on UTapButtonSlot");
static_assert(offsetof(UTapButtonSlot, Padding) == 0x000040, "Member 'UTapButtonSlot::Padding' has a wrong offset!");
static_assert(offsetof(UTapButtonSlot, HorizontalAlignment) == 0x000050, "Member 'UTapButtonSlot::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UTapButtonSlot, VerticalAlignment) == 0x000051, "Member 'UTapButtonSlot::VerticalAlignment' has a wrong offset!");

// Class TapCommon.TapToastWidgetStyle
// 0x03B8 (0x03F0 - 0x0038)
class UTapToastWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FTapToastStyle                         WidgetStyle;                                       // 0x0038(0x03B8)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapToastWidgetStyle">();
	}
	static class UTapToastWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapToastWidgetStyle>();
	}
};
static_assert(alignof(UTapToastWidgetStyle) == 0x000008, "Wrong alignment on UTapToastWidgetStyle");
static_assert(sizeof(UTapToastWidgetStyle) == 0x0003F0, "Wrong size on UTapToastWidgetStyle");
static_assert(offsetof(UTapToastWidgetStyle, WidgetStyle) == 0x000038, "Member 'UTapToastWidgetStyle::WidgetStyle' has a wrong offset!");

// Class TapCommon.TapCommonBPLibrary
// 0x0000 (0x0030 - 0x0030)
class UTapCommonBPLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CallHandler(const class FString& Command);
	static void Register(const class FString& ServiceClz, const class FString& ServiceImpl);
	static TMap<class FString, class FString> RemoveEmptyKey(const TMap<class FString, class FString>& StringMap);
	static TArray<class FString> RemoveEmptyString(const TArray<class FString>& StringArray);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapCommonBPLibrary">();
	}
	static class UTapCommonBPLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapCommonBPLibrary>();
	}
};
static_assert(alignof(UTapCommonBPLibrary) == 0x000008, "Wrong alignment on UTapCommonBPLibrary");
static_assert(sizeof(UTapCommonBPLibrary) == 0x000030, "Wrong size on UTapCommonBPLibrary");

// Class TapCommon.TapMessageBoxWidgetStyle
// 0x02A0 (0x02D8 - 0x0038)
class UTapMessageBoxWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FTapMessageBoxStyle                    WidgetStyle;                                       // 0x0038(0x02A0)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapMessageBoxWidgetStyle">();
	}
	static class UTapMessageBoxWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapMessageBoxWidgetStyle>();
	}
};
static_assert(alignof(UTapMessageBoxWidgetStyle) == 0x000008, "Wrong alignment on UTapMessageBoxWidgetStyle");
static_assert(sizeof(UTapMessageBoxWidgetStyle) == 0x0002D8, "Wrong size on UTapMessageBoxWidgetStyle");
static_assert(offsetof(UTapMessageBoxWidgetStyle, WidgetStyle) == 0x000038, "Member 'UTapMessageBoxWidgetStyle::WidgetStyle' has a wrong offset!");

// Class TapCommon.TapSubsystem
// 0x0030 (0x0068 - 0x0038)
class UTapSubsystem final : public ULocalPlayerSubsystem
{
public:
	uint8                                         Pad_2290[0x20];                                    // 0x0038(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserInterfaceSettings*                 UISetting;                                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TapWidgetZOrder;                                   // 0x0060(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2291[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapSubsystem">();
	}
	static class UTapSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapSubsystem>();
	}
};
static_assert(alignof(UTapSubsystem) == 0x000008, "Wrong alignment on UTapSubsystem");
static_assert(sizeof(UTapSubsystem) == 0x000068, "Wrong size on UTapSubsystem");
static_assert(offsetof(UTapSubsystem, UISetting) == 0x000058, "Member 'UTapSubsystem::UISetting' has a wrong offset!");
static_assert(offsetof(UTapSubsystem, TapWidgetZOrder) == 0x000060, "Member 'UTapSubsystem::TapWidgetZOrder' has a wrong offset!");

// Class TapCommon.TapWidget
// 0x0000 (0x0290 - 0x0290)
class UTapWidget : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapWidget">();
	}
	static class UTapWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapWidget>();
	}
};
static_assert(alignof(UTapWidget) == 0x000008, "Wrong alignment on UTapWidget");
static_assert(sizeof(UTapWidget) == 0x000290, "Wrong size on UTapWidget");

// Class TapCommon.TapWebBrowser
// 0x0050 (0x02E0 - 0x0290)
class UTapWebBrowser final : public UTapWidget
{
public:
	uint8                                         Pad_2292[0x10];                                    // 0x0290(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UNativeWidgetHost*                      WebBrowser;                                        // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTapButton*                             BTN_GoBack;                                        // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTapButton*                             BTN_Close;                                         // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTapButton*                             BTN_Retry;                                         // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TB_Retry;                                          // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TB_ErrorTip;                                       // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 ErrorTipIcon;                                      // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           RetryPanel;                                        // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Close();
	void GoBack();
	void Reload();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TapWebBrowser">();
	}
	static class UTapWebBrowser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTapWebBrowser>();
	}
};
static_assert(alignof(UTapWebBrowser) == 0x000008, "Wrong alignment on UTapWebBrowser");
static_assert(sizeof(UTapWebBrowser) == 0x0002E0, "Wrong size on UTapWebBrowser");
static_assert(offsetof(UTapWebBrowser, WebBrowser) == 0x0002A0, "Member 'UTapWebBrowser::WebBrowser' has a wrong offset!");
static_assert(offsetof(UTapWebBrowser, BTN_GoBack) == 0x0002A8, "Member 'UTapWebBrowser::BTN_GoBack' has a wrong offset!");
static_assert(offsetof(UTapWebBrowser, BTN_Close) == 0x0002B0, "Member 'UTapWebBrowser::BTN_Close' has a wrong offset!");
static_assert(offsetof(UTapWebBrowser, BTN_Retry) == 0x0002B8, "Member 'UTapWebBrowser::BTN_Retry' has a wrong offset!");
static_assert(offsetof(UTapWebBrowser, TB_Retry) == 0x0002C0, "Member 'UTapWebBrowser::TB_Retry' has a wrong offset!");
static_assert(offsetof(UTapWebBrowser, TB_ErrorTip) == 0x0002C8, "Member 'UTapWebBrowser::TB_ErrorTip' has a wrong offset!");
static_assert(offsetof(UTapWebBrowser, ErrorTipIcon) == 0x0002D0, "Member 'UTapWebBrowser::ErrorTipIcon' has a wrong offset!");
static_assert(offsetof(UTapWebBrowser, RetryPanel) == 0x0002D8, "Member 'UTapWebBrowser::RetryPanel' has a wrong offset!");

// Class TapCommon.TUHUD
// 0x0020 (0x02B0 - 0x0290)
class UTUHUD final : public UUserWidget
{
public:
	class UTextBlock*                             TitleLabel;                                        // 0x0290(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                               ImageBox;                                          // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               BackView;                                          // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2293[0x8];                                     // 0x02A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void Dismiss();
	static void ShowToast(const class FString& Toast, float TimeInterval);
	static void ShowWait();
	static void ShowWaitAndToast(const class FString& Toast);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TUHUD">();
	}
	static class UTUHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTUHUD>();
	}
};
static_assert(alignof(UTUHUD) == 0x000008, "Wrong alignment on UTUHUD");
static_assert(sizeof(UTUHUD) == 0x0002B0, "Wrong size on UTUHUD");
static_assert(offsetof(UTUHUD, TitleLabel) == 0x000290, "Member 'UTUHUD::TitleLabel' has a wrong offset!");
static_assert(offsetof(UTUHUD, ImageBox) == 0x000298, "Member 'UTUHUD::ImageBox' has a wrong offset!");
static_assert(offsetof(UTUHUD, BackView) == 0x0002A0, "Member 'UTUHUD::BackView' has a wrong offset!");

}

