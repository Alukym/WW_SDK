#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TapCommon

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JsonUtilities_structs.hpp"


namespace SDK
{

// Enum TapCommon.ETapButtonStyleType
// NumValues: 0x000D
enum class ETapButtonStyleType : uint8
{
	Blue                                     = 0,
	White                                    = 1,
	Black                                    = 2,
	RefreshBlue                              = 3,
	RefreshBlack                             = 4,
	RoundBack                                = 5,
	RoundClose                               = 6,
	SmallBack                                = 7,
	SmallClose                               = 8,
	BoldBack                                 = 9,
	BoldClose                                = 10,
	LargeCopy                                = 11,
	ETapButtonStyleType_MAX                  = 12,
};

// Enum TapCommon.ETapInputMode
// NumValues: 0x0003
enum class ETapInputMode : uint8
{
	Focus                                    = 0,
	Cursor                                   = 1,
	ETapInputMode_MAX                        = 2,
};

// Enum TapCommon.ETapControllerTipIconType
// NumValues: 0x0005
enum class ETapControllerTipIconType : uint8
{
	None                                     = 0,
	Scroll                                   = 1,
	Back                                     = 2,
	Accept                                   = 4,
	ETapControllerTipIconType_MAX            = 5,
};

// Enum TapCommon.ETapControllerType
// NumValues: 0x0004
enum class ETapControllerType : uint8
{
	PS                                       = 0,
	XBox                                     = 1,
	Switch                                   = 2,
	ETapControllerType_MAX                   = 3,
};

// Enum TapCommon.ETapAntiAddictionConfigRegion
// NumValues: 0x0003
enum class ETapAntiAddictionConfigRegion : uint8
{
	China                                    = 0,
	Vietnam                                  = 1,
	ETapAntiAddictionConfigRegion_MAX        = 2,
};

// Enum TapCommon.ELanguageType
// NumValues: 0x0010
enum class ELanguageType : uint8
{
	AUTO                                     = 0,
	ZH                                       = 1,
	EN                                       = 2,
	ZHTW                                     = 3,
	JA                                       = 4,
	KO                                       = 5,
	TH                                       = 6,
	ID                                       = 7,
	DE                                       = 8,
	ES                                       = 9,
	FR                                       = 10,
	PT                                       = 11,
	RU                                       = 12,
	TR                                       = 13,
	VI                                       = 14,
	ELanguageType_MAX                        = 15,
};

// Enum TapCommon.ERegionType
// NumValues: 0x0003
enum class ERegionType : uint8
{
	CN                                       = 0,
	Global                                   = 1,
	ERegionType_MAX                          = 2,
};

// ScriptStruct TapCommon.TapThrobberStyle
// 0x08A0 (0x08A8 - 0x0008)
struct FTapThrobberStyle final : public FSlateWidgetStyle
{
public:
	struct FSlateBrush                            BackGroundBrush;                                   // 0x0008(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            BackGroundBrush_PC;                                // 0x0098(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            BackGroundBrush_PC_Text;                           // 0x0128(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ShadowBrush;                                       // 0x01B8(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            PieceImage;                                        // 0x0248(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            PieceImage_PC;                                     // 0x02D8(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateColor                            ColorAndOpacity;                                   // 0x0368(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        ContentStyle;                                      // 0x0390(0x0288)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        ContentStyle_PC;                                   // 0x0618(0x0288)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         RotationRate;                                      // 0x08A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2283[0x4];                                     // 0x08A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTapThrobberStyle) == 0x000008, "Wrong alignment on FTapThrobberStyle");
static_assert(sizeof(FTapThrobberStyle) == 0x0008A8, "Wrong size on FTapThrobberStyle");
static_assert(offsetof(FTapThrobberStyle, BackGroundBrush) == 0x000008, "Member 'FTapThrobberStyle::BackGroundBrush' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, BackGroundBrush_PC) == 0x000098, "Member 'FTapThrobberStyle::BackGroundBrush_PC' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, BackGroundBrush_PC_Text) == 0x000128, "Member 'FTapThrobberStyle::BackGroundBrush_PC_Text' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, ShadowBrush) == 0x0001B8, "Member 'FTapThrobberStyle::ShadowBrush' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, PieceImage) == 0x000248, "Member 'FTapThrobberStyle::PieceImage' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, PieceImage_PC) == 0x0002D8, "Member 'FTapThrobberStyle::PieceImage_PC' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, ColorAndOpacity) == 0x000368, "Member 'FTapThrobberStyle::ColorAndOpacity' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, ContentStyle) == 0x000390, "Member 'FTapThrobberStyle::ContentStyle' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, ContentStyle_PC) == 0x000618, "Member 'FTapThrobberStyle::ContentStyle_PC' has a wrong offset!");
static_assert(offsetof(FTapThrobberStyle, RotationRate) == 0x0008A0, "Member 'FTapThrobberStyle::RotationRate' has a wrong offset!");

// ScriptStruct TapCommon.TapBoxWrapperStyle
// 0x0358 (0x0360 - 0x0008)
struct FTapBoxWrapperStyle final : public FSlateWidgetStyle
{
public:
	struct FSlateBrush                            BackgroundBrush;                                   // 0x0008(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        TitleStyle;                                        // 0x0098(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                TitlePadding;                                      // 0x0320(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                ButtonBoxPadding;                                  // 0x0330(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              ButtonSize;                                        // 0x0340(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ButtonGap;                                         // 0x0348(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                CloseButtonPadding;                                // 0x034C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2284[0x4];                                     // 0x035C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTapBoxWrapperStyle) == 0x000008, "Wrong alignment on FTapBoxWrapperStyle");
static_assert(sizeof(FTapBoxWrapperStyle) == 0x000360, "Wrong size on FTapBoxWrapperStyle");
static_assert(offsetof(FTapBoxWrapperStyle, BackgroundBrush) == 0x000008, "Member 'FTapBoxWrapperStyle::BackgroundBrush' has a wrong offset!");
static_assert(offsetof(FTapBoxWrapperStyle, TitleStyle) == 0x000098, "Member 'FTapBoxWrapperStyle::TitleStyle' has a wrong offset!");
static_assert(offsetof(FTapBoxWrapperStyle, TitlePadding) == 0x000320, "Member 'FTapBoxWrapperStyle::TitlePadding' has a wrong offset!");
static_assert(offsetof(FTapBoxWrapperStyle, ButtonBoxPadding) == 0x000330, "Member 'FTapBoxWrapperStyle::ButtonBoxPadding' has a wrong offset!");
static_assert(offsetof(FTapBoxWrapperStyle, ButtonSize) == 0x000340, "Member 'FTapBoxWrapperStyle::ButtonSize' has a wrong offset!");
static_assert(offsetof(FTapBoxWrapperStyle, ButtonGap) == 0x000348, "Member 'FTapBoxWrapperStyle::ButtonGap' has a wrong offset!");
static_assert(offsetof(FTapBoxWrapperStyle, CloseButtonPadding) == 0x00034C, "Member 'FTapBoxWrapperStyle::CloseButtonPadding' has a wrong offset!");

// ScriptStruct TapCommon.TapCommand
// 0x0048 (0x0048 - 0x0000)
struct FTapCommand final
{
public:
	class FString                                 Service;                                           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Method;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Args;                                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Callback;                                          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OnceTime;                                          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2285[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallbackId;                                        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTapCommand) == 0x000008, "Wrong alignment on FTapCommand");
static_assert(sizeof(FTapCommand) == 0x000048, "Wrong size on FTapCommand");
static_assert(offsetof(FTapCommand, Service) == 0x000000, "Member 'FTapCommand::Service' has a wrong offset!");
static_assert(offsetof(FTapCommand, Method) == 0x000010, "Member 'FTapCommand::Method' has a wrong offset!");
static_assert(offsetof(FTapCommand, Args) == 0x000020, "Member 'FTapCommand::Args' has a wrong offset!");
static_assert(offsetof(FTapCommand, Callback) == 0x000030, "Member 'FTapCommand::Callback' has a wrong offset!");
static_assert(offsetof(FTapCommand, OnceTime) == 0x000031, "Member 'FTapCommand::OnceTime' has a wrong offset!");
static_assert(offsetof(FTapCommand, CallbackId) == 0x000038, "Member 'FTapCommand::CallbackId' has a wrong offset!");

// ScriptStruct TapCommon.TapCommonRegionCode
// 0x0001 (0x0001 - 0x0000)
struct FTapCommonRegionCode final
{
public:
	bool                                          IsMainland;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTapCommonRegionCode) == 0x000001, "Wrong alignment on FTapCommonRegionCode");
static_assert(sizeof(FTapCommonRegionCode) == 0x000001, "Wrong size on FTapCommonRegionCode");
static_assert(offsetof(FTapCommonRegionCode, IsMainland) == 0x000000, "Member 'FTapCommonRegionCode::IsMainland' has a wrong offset!");

// ScriptStruct TapCommon.TapControllerConfig
// 0x000C (0x000C - 0x0000)
struct FTapControllerConfig final
{
public:
	float                                         DeadZone;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CursorMaxSpeed;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScrollMaxSpeed;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTapControllerConfig) == 0x000004, "Wrong alignment on FTapControllerConfig");
static_assert(sizeof(FTapControllerConfig) == 0x00000C, "Wrong size on FTapControllerConfig");
static_assert(offsetof(FTapControllerConfig, DeadZone) == 0x000000, "Member 'FTapControllerConfig::DeadZone' has a wrong offset!");
static_assert(offsetof(FTapControllerConfig, CursorMaxSpeed) == 0x000004, "Member 'FTapControllerConfig::CursorMaxSpeed' has a wrong offset!");
static_assert(offsetof(FTapControllerConfig, ScrollMaxSpeed) == 0x000008, "Member 'FTapControllerConfig::ScrollMaxSpeed' has a wrong offset!");

// ScriptStruct TapCommon.TapMessageBoxStyle
// 0x0298 (0x02A0 - 0x0008)
struct FTapMessageBoxStyle final : public FSlateWidgetStyle
{
public:
	struct FTextBlockStyle                        RichTextBlockStyle;                                // 0x0008(0x0288)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                ContentPadding;                                    // 0x0290(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTapMessageBoxStyle) == 0x000008, "Wrong alignment on FTapMessageBoxStyle");
static_assert(sizeof(FTapMessageBoxStyle) == 0x0002A0, "Wrong size on FTapMessageBoxStyle");
static_assert(offsetof(FTapMessageBoxStyle, RichTextBlockStyle) == 0x000008, "Member 'FTapMessageBoxStyle::RichTextBlockStyle' has a wrong offset!");
static_assert(offsetof(FTapMessageBoxStyle, ContentPadding) == 0x000290, "Member 'FTapMessageBoxStyle::ContentPadding' has a wrong offset!");

// ScriptStruct TapCommon.TapResponseWrapper
// 0x0030 (0x0030 - 0x0000)
struct FTapResponseWrapper final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2286[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJsonObjectWrapper                     Data;                                              // 0x0008(0x0020)(NativeAccessSpecifierPublic)
	int64                                         Now;                                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTapResponseWrapper) == 0x000008, "Wrong alignment on FTapResponseWrapper");
static_assert(sizeof(FTapResponseWrapper) == 0x000030, "Wrong size on FTapResponseWrapper");
static_assert(offsetof(FTapResponseWrapper, Success) == 0x000000, "Member 'FTapResponseWrapper::Success' has a wrong offset!");
static_assert(offsetof(FTapResponseWrapper, Data) == 0x000008, "Member 'FTapResponseWrapper::Data' has a wrong offset!");
static_assert(offsetof(FTapResponseWrapper, Now) == 0x000028, "Member 'FTapResponseWrapper::Now' has a wrong offset!");

// ScriptStruct TapCommon.TapResult
// 0x0038 (0x0038 - 0x0000)
struct FTapResult final
{
public:
	class FString                                 CallbackId;                                        // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Code;                                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OnceTime;                                          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2287[0x3];                                     // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTapResult) == 0x000008, "Wrong alignment on FTapResult");
static_assert(sizeof(FTapResult) == 0x000038, "Wrong size on FTapResult");
static_assert(offsetof(FTapResult, CallbackId) == 0x000000, "Member 'FTapResult::CallbackId' has a wrong offset!");
static_assert(offsetof(FTapResult, Content) == 0x000010, "Member 'FTapResult::Content' has a wrong offset!");
static_assert(offsetof(FTapResult, Message) == 0x000020, "Member 'FTapResult::Message' has a wrong offset!");
static_assert(offsetof(FTapResult, Code) == 0x000030, "Member 'FTapResult::Code' has a wrong offset!");
static_assert(offsetof(FTapResult, OnceTime) == 0x000034, "Member 'FTapResult::OnceTime' has a wrong offset!");

// ScriptStruct TapCommon.TapToastStyle
// 0x03B0 (0x03B8 - 0x0008)
struct FTapToastStyle final : public FSlateWidgetStyle
{
public:
	struct FSlateBrush                            Background;                                        // 0x0008(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            IconBrushTemplate;                                 // 0x0098(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        ContentStyle;                                      // 0x0128(0x0288)(Edit, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x03B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2288[0x4];                                     // 0x03B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTapToastStyle) == 0x000008, "Wrong alignment on FTapToastStyle");
static_assert(sizeof(FTapToastStyle) == 0x0003B8, "Wrong size on FTapToastStyle");
static_assert(offsetof(FTapToastStyle, Background) == 0x000008, "Member 'FTapToastStyle::Background' has a wrong offset!");
static_assert(offsetof(FTapToastStyle, IconBrushTemplate) == 0x000098, "Member 'FTapToastStyle::IconBrushTemplate' has a wrong offset!");
static_assert(offsetof(FTapToastStyle, ContentStyle) == 0x000128, "Member 'FTapToastStyle::ContentStyle' has a wrong offset!");
static_assert(offsetof(FTapToastStyle, Height) == 0x0003B0, "Member 'FTapToastStyle::Height' has a wrong offset!");

// ScriptStruct TapCommon.TUCommonStorage
// 0x0001 (0x0001 - 0x0000)
struct FTUCommonStorage final
{
public:
	uint8                                         Pad_2289[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTUCommonStorage) == 0x000001, "Wrong alignment on FTUCommonStorage");
static_assert(sizeof(FTUCommonStorage) == 0x000001, "Wrong size on FTUCommonStorage");

// ScriptStruct TapCommon.TUError
// 0x0028 (0x0028 - 0x0000)
struct FTUError final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_228A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error_description;                                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Msg;                                               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTUError) == 0x000008, "Wrong alignment on FTUError");
static_assert(sizeof(FTUError) == 0x000028, "Wrong size on FTUError");
static_assert(offsetof(FTUError, Code) == 0x000000, "Member 'FTUError::Code' has a wrong offset!");
static_assert(offsetof(FTUError, Error_description) == 0x000008, "Member 'FTUError::Error_description' has a wrong offset!");
static_assert(offsetof(FTUError, Msg) == 0x000018, "Member 'FTUError::Msg' has a wrong offset!");

// ScriptStruct TapCommon.TUConfig
// 0x0088 (0x0088 - 0x0000)
struct FTUConfig final
{
public:
	class FString                                 ClientID;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClientToken;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERegionType                                   RegionType;                                        // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_228B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ServerURL;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_228C[0x50];                                    // 0x0038(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTUConfig) == 0x000008, "Wrong alignment on FTUConfig");
static_assert(sizeof(FTUConfig) == 0x000088, "Wrong size on FTUConfig");
static_assert(offsetof(FTUConfig, ClientID) == 0x000000, "Member 'FTUConfig::ClientID' has a wrong offset!");
static_assert(offsetof(FTUConfig, ClientToken) == 0x000010, "Member 'FTUConfig::ClientToken' has a wrong offset!");
static_assert(offsetof(FTUConfig, RegionType) == 0x000020, "Member 'FTUConfig::RegionType' has a wrong offset!");
static_assert(offsetof(FTUConfig, ServerURL) == 0x000028, "Member 'FTUConfig::ServerURL' has a wrong offset!");

// ScriptStruct TapCommon.TapAntiAddictionConfig
// 0x0002 (0x0002 - 0x0000)
struct FTapAntiAddictionConfig final
{
public:
	bool                                          bShowSwitchAccount;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETapAntiAddictionConfigRegion                 Region;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTapAntiAddictionConfig) == 0x000001, "Wrong alignment on FTapAntiAddictionConfig");
static_assert(sizeof(FTapAntiAddictionConfig) == 0x000002, "Wrong size on FTapAntiAddictionConfig");
static_assert(offsetof(FTapAntiAddictionConfig, bShowSwitchAccount) == 0x000000, "Member 'FTapAntiAddictionConfig::bShowSwitchAccount' has a wrong offset!");
static_assert(offsetof(FTapAntiAddictionConfig, Region) == 0x000001, "Member 'FTapAntiAddictionConfig::Region' has a wrong offset!");

// ScriptStruct TapCommon.BillboardConfig
// 0x0060 (0x0060 - 0x0000)
struct FBillboardConfig final
{
public:
	TMap<class FString, class FString>            Dimensions;                                        // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 BillboardUrl;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBillboardConfig) == 0x000008, "Wrong alignment on FBillboardConfig");
static_assert(sizeof(FBillboardConfig) == 0x000060, "Wrong size on FBillboardConfig");
static_assert(offsetof(FBillboardConfig, Dimensions) == 0x000000, "Member 'FBillboardConfig::Dimensions' has a wrong offset!");
static_assert(offsetof(FBillboardConfig, BillboardUrl) == 0x000050, "Member 'FBillboardConfig::BillboardUrl' has a wrong offset!");

}

