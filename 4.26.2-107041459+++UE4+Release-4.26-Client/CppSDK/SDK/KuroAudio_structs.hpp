#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroAudio

#include "Basic.hpp"

#include "MovieScene_structs.hpp"


namespace SDK
{

// Enum KuroAudio.EAudioFadeCurve
// NumValues: 0x000A
enum class EAudioFadeCurve : uint8
{
	Log3                                     = 0,
	Sine                                     = 1,
	Log1                                     = 2,
	InvSCurve                                = 3,
	Linear                                   = 4,
	SCurve                                   = 5,
	Exp1                                     = 6,
	SineRecip                                = 7,
	Exp3                                     = 8,
	EAudioFadeCurve_MAX                      = 9,
};

// Enum KuroAudio.EAudioActionType
// NumValues: 0x0006
enum class EAudioActionType : uint8
{
	Stop                                     = 0,
	Pause                                    = 1,
	Resume                                   = 2,
	Break                                    = 3,
	ReleaseEnvelope                          = 4,
	EAudioActionType_MAX                     = 5,
};

// Enum KuroAudio.EKuroAudioVolumeChannel
// NumValues: 0x0004
enum class EKuroAudioVolumeChannel : uint8
{
	Default                                  = 0,
	Music                                    = 1,
	Count                                    = 2,
	EKuroAudioVolumeChannel_MAX              = 3,
};

// ScriptStruct KuroAudio.KuroAudioDefaultStateEventSettings
// 0x0050 (0x0050 - 0x0000)
struct FKuroAudioDefaultStateEventSettings final
{
public:
	TMap<EKuroAudioVolumeChannel, TSoftObjectPtr<class UAkAudioEvent>> DefaultStateEventMap;                              // 0x0000(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKuroAudioDefaultStateEventSettings) == 0x000008, "Wrong alignment on FKuroAudioDefaultStateEventSettings");
static_assert(sizeof(FKuroAudioDefaultStateEventSettings) == 0x000050, "Wrong size on FKuroAudioDefaultStateEventSettings");
static_assert(offsetof(FKuroAudioDefaultStateEventSettings, DefaultStateEventMap) == 0x000000, "Member 'FKuroAudioDefaultStateEventSettings::DefaultStateEventMap' has a wrong offset!");

// ScriptStruct KuroAudio.MovieSceneKuroAudioEventTemplate
// 0x0008 (0x0028 - 0x0020)
struct FMovieSceneKuroAudioEventTemplate final : public FMovieSceneEvalTemplate
{
public:
	class UMovieSceneKuroAudioEventSection*       Section;                                           // 0x0020(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMovieSceneKuroAudioEventTemplate) == 0x000008, "Wrong alignment on FMovieSceneKuroAudioEventTemplate");
static_assert(sizeof(FMovieSceneKuroAudioEventTemplate) == 0x000028, "Wrong size on FMovieSceneKuroAudioEventTemplate");
static_assert(offsetof(FMovieSceneKuroAudioEventTemplate, Section) == 0x000020, "Member 'FMovieSceneKuroAudioEventTemplate::Section' has a wrong offset!");

}

