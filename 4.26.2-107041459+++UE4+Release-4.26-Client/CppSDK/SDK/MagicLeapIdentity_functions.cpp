#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MagicLeapIdentity

#include "Basic.hpp"

#include "MagicLeapIdentity_classes.hpp"
#include "MagicLeapIdentity_parameters.hpp"


namespace SDK
{

// DelegateFunction MagicLeapIdentity.MagicLeapIdentity.AvailableIdentityAttributesDelegate__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// EMagicLeapIdentityError                 ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EMagicLeapIdentityKey>           AvailableAttributes                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMagicLeapIdentity::AvailableIdentityAttributesDelegate__DelegateSignature(EMagicLeapIdentityError ResultCode, const TArray<EMagicLeapIdentityKey>& AvailableAttributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapIdentity", "AvailableIdentityAttributesDelegate__DelegateSignature");

	Params::MagicLeapIdentity_AvailableIdentityAttributesDelegate__DelegateSignature Parms{};

	Parms.ResultCode = ResultCode;
	Parms.AvailableAttributes = std::move(AvailableAttributes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MagicLeapIdentity.MagicLeapIdentity.GetAllAvailableAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EMagicLeapIdentityKey>           AvailableAttributes                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMagicLeapIdentityError                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMagicLeapIdentityError UMagicLeapIdentity::GetAllAvailableAttributes(TArray<EMagicLeapIdentityKey>* AvailableAttributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapIdentity", "GetAllAvailableAttributes");

	Params::MagicLeapIdentity_GetAllAvailableAttributes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AvailableAttributes != nullptr)
		*AvailableAttributes = std::move(Parms.AvailableAttributes);

	return Parms.ReturnValue;
}


// Function MagicLeapIdentity.MagicLeapIdentity.GetAllAvailableAttributesAsync
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(EMagicLeapIdentityError ResultCode, TArray<EMagicLeapIdentityKey>& AvailableAttributes)>ResultDelegate                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMagicLeapIdentity::GetAllAvailableAttributesAsync(const TDelegate<void(EMagicLeapIdentityError ResultCode, TArray<EMagicLeapIdentityKey>& AvailableAttributes)>& ResultDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapIdentity", "GetAllAvailableAttributesAsync");

	Params::MagicLeapIdentity_GetAllAvailableAttributesAsync Parms{};

	Parms.ResultDelegate = ResultDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction MagicLeapIdentity.MagicLeapIdentity.ModifyIdentityAttributeValueDelegate__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// EMagicLeapIdentityError                 ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EMagicLeapIdentityKey>           AttributesUpdatedSuccessfully                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMagicLeapIdentity::ModifyIdentityAttributeValueDelegate__DelegateSignature(EMagicLeapIdentityError ResultCode, const TArray<EMagicLeapIdentityKey>& AttributesUpdatedSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapIdentity", "ModifyIdentityAttributeValueDelegate__DelegateSignature");

	Params::MagicLeapIdentity_ModifyIdentityAttributeValueDelegate__DelegateSignature Parms{};

	Parms.ResultCode = ResultCode;
	Parms.AttributesUpdatedSuccessfully = std::move(AttributesUpdatedSuccessfully);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MagicLeapIdentity.MagicLeapIdentity.RequestAttributeValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EMagicLeapIdentityKey>           RequestedAttributeList                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FMagicLeapIdentityAttribute>RequestedAttributeValues                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EMagicLeapIdentityError                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMagicLeapIdentityError UMagicLeapIdentity::RequestAttributeValue(const TArray<EMagicLeapIdentityKey>& RequestedAttributeList, TArray<struct FMagicLeapIdentityAttribute>* RequestedAttributeValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapIdentity", "RequestAttributeValue");

	Params::MagicLeapIdentity_RequestAttributeValue Parms{};

	Parms.RequestedAttributeList = std::move(RequestedAttributeList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RequestedAttributeValues != nullptr)
		*RequestedAttributeValues = std::move(Parms.RequestedAttributeValues);

	return Parms.ReturnValue;
}


// Function MagicLeapIdentity.MagicLeapIdentity.RequestAttributeValueAsync
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EMagicLeapIdentityKey>           RequestedAttributeList                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EMagicLeapIdentityError ResultCode, TArray<struct FMagicLeapIdentityAttribute>& AttributeValue)>ResultDelegate                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EMagicLeapIdentityError                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMagicLeapIdentityError UMagicLeapIdentity::RequestAttributeValueAsync(const TArray<EMagicLeapIdentityKey>& RequestedAttributeList, const TDelegate<void(EMagicLeapIdentityError ResultCode, TArray<struct FMagicLeapIdentityAttribute>& AttributeValue)>& ResultDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapIdentity", "RequestAttributeValueAsync");

	Params::MagicLeapIdentity_RequestAttributeValueAsync Parms{};

	Parms.RequestedAttributeList = std::move(RequestedAttributeList);
	Parms.ResultDelegate = ResultDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction MagicLeapIdentity.MagicLeapIdentity.RequestIdentityAttributeValueDelegate__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// EMagicLeapIdentityError                 ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMagicLeapIdentityAttribute>AttributeValue                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMagicLeapIdentity::RequestIdentityAttributeValueDelegate__DelegateSignature(EMagicLeapIdentityError ResultCode, const TArray<struct FMagicLeapIdentityAttribute>& AttributeValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapIdentity", "RequestIdentityAttributeValueDelegate__DelegateSignature");

	Params::MagicLeapIdentity_RequestIdentityAttributeValueDelegate__DelegateSignature Parms{};

	Parms.ResultCode = ResultCode;
	Parms.AttributeValue = std::move(AttributeValue);

	UObject::ProcessEvent(Func, &Parms);
}

}

