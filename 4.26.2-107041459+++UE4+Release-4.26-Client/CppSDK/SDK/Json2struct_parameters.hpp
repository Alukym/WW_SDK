#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Json2struct

#include "Basic.hpp"

#include "Json2struct_structs.hpp"


namespace SDK::Params
{

// Function json2struct.json2structBPLibrary.json2structBP
// 0x0020 (0x0020 - 0x0000)
struct Json2structBPLibrary_Json2structBP final
{
public:
	class UStruct*                                Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Json;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJson2structParseResult                       ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_105B[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Json2structBPLibrary_Json2structBP) == 0x000008, "Wrong alignment on Json2structBPLibrary_Json2structBP");
static_assert(sizeof(Json2structBPLibrary_Json2structBP) == 0x000020, "Wrong size on Json2structBPLibrary_Json2structBP");
static_assert(offsetof(Json2structBPLibrary_Json2structBP, Out) == 0x000000, "Member 'Json2structBPLibrary_Json2structBP::Out' has a wrong offset!");
static_assert(offsetof(Json2structBPLibrary_Json2structBP, Json) == 0x000008, "Member 'Json2structBPLibrary_Json2structBP::Json' has a wrong offset!");
static_assert(offsetof(Json2structBPLibrary_Json2structBP, ReturnValue) == 0x000018, "Member 'Json2structBPLibrary_Json2structBP::ReturnValue' has a wrong offset!");

// Function json2struct.json2structBPLibrary.WriteStructBP
// 0x0070 (0x0070 - 0x0000)
struct Json2structBPLibrary_WriteStructBP final
{
public:
	class UStruct*                                InStruct;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJson2struct_filter                    Filter;                                            // 0x0008(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Json;                                              // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJson2structParseResult                       ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_105C[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Json2structBPLibrary_WriteStructBP) == 0x000008, "Wrong alignment on Json2structBPLibrary_WriteStructBP");
static_assert(sizeof(Json2structBPLibrary_WriteStructBP) == 0x000070, "Wrong size on Json2structBPLibrary_WriteStructBP");
static_assert(offsetof(Json2structBPLibrary_WriteStructBP, InStruct) == 0x000000, "Member 'Json2structBPLibrary_WriteStructBP::InStruct' has a wrong offset!");
static_assert(offsetof(Json2structBPLibrary_WriteStructBP, Filter) == 0x000008, "Member 'Json2structBPLibrary_WriteStructBP::Filter' has a wrong offset!");
static_assert(offsetof(Json2structBPLibrary_WriteStructBP, Json) == 0x000058, "Member 'Json2structBPLibrary_WriteStructBP::Json' has a wrong offset!");
static_assert(offsetof(Json2structBPLibrary_WriteStructBP, ReturnValue) == 0x000068, "Member 'Json2structBPLibrary_WriteStructBP::ReturnValue' has a wrong offset!");

// Function json2struct.JsonAsyncNode.json2structUrl
// 0x0030 (0x0030 - 0x0000)
struct JsonAsyncNode_Json2structUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RequestJson;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          WC;                                                // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJsonAsyncNode*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(JsonAsyncNode_Json2structUrl) == 0x000008, "Wrong alignment on JsonAsyncNode_Json2structUrl");
static_assert(sizeof(JsonAsyncNode_Json2structUrl) == 0x000030, "Wrong size on JsonAsyncNode_Json2structUrl");
static_assert(offsetof(JsonAsyncNode_Json2structUrl, URL) == 0x000000, "Member 'JsonAsyncNode_Json2structUrl::URL' has a wrong offset!");
static_assert(offsetof(JsonAsyncNode_Json2structUrl, RequestJson) == 0x000010, "Member 'JsonAsyncNode_Json2structUrl::RequestJson' has a wrong offset!");
static_assert(offsetof(JsonAsyncNode_Json2structUrl, WC) == 0x000020, "Member 'JsonAsyncNode_Json2structUrl::WC' has a wrong offset!");
static_assert(offsetof(JsonAsyncNode_Json2structUrl, ReturnValue) == 0x000028, "Member 'JsonAsyncNode_Json2structUrl::ReturnValue' has a wrong offset!");

}

