#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroBackgroundDownload

#include "Basic.hpp"

#include "KuroBackgroundDownload_structs.hpp"


namespace SDK::Params
{

// Function KuroBackgroundDownload.KuroBgPrefixDownload.Start
// 0x0038 (0x0038 - 0x0000)
struct KuroBgPrefixDownload_Start final
{
public:
	class FString                                 Suffix;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Prefixes;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FKuroRequestDownloadInfo>       Targets;                                           // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         InRetryCount;                                      // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTimeout;                                         // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroBgPrefixDownload_Start) == 0x000008, "Wrong alignment on KuroBgPrefixDownload_Start");
static_assert(sizeof(KuroBgPrefixDownload_Start) == 0x000038, "Wrong size on KuroBgPrefixDownload_Start");
static_assert(offsetof(KuroBgPrefixDownload_Start, Suffix) == 0x000000, "Member 'KuroBgPrefixDownload_Start::Suffix' has a wrong offset!");
static_assert(offsetof(KuroBgPrefixDownload_Start, Prefixes) == 0x000010, "Member 'KuroBgPrefixDownload_Start::Prefixes' has a wrong offset!");
static_assert(offsetof(KuroBgPrefixDownload_Start, Targets) == 0x000020, "Member 'KuroBgPrefixDownload_Start::Targets' has a wrong offset!");
static_assert(offsetof(KuroBgPrefixDownload_Start, InRetryCount) == 0x000030, "Member 'KuroBgPrefixDownload_Start::InRetryCount' has a wrong offset!");
static_assert(offsetof(KuroBgPrefixDownload_Start, InTimeout) == 0x000034, "Member 'KuroBgPrefixDownload_Start::InTimeout' has a wrong offset!");

// Function KuroBackgroundDownload.KuroBgPrefixDownload.GetBpsSpeed
// 0x0004 (0x0004 - 0x0000)
struct KuroBgPrefixDownload_GetBpsSpeed final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroBgPrefixDownload_GetBpsSpeed) == 0x000004, "Wrong alignment on KuroBgPrefixDownload_GetBpsSpeed");
static_assert(sizeof(KuroBgPrefixDownload_GetBpsSpeed) == 0x000004, "Wrong size on KuroBgPrefixDownload_GetBpsSpeed");
static_assert(offsetof(KuroBgPrefixDownload_GetBpsSpeed, ReturnValue) == 0x000000, "Member 'KuroBgPrefixDownload_GetBpsSpeed::ReturnValue' has a wrong offset!");

}

